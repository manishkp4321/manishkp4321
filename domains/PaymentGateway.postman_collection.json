{
  "info": {
    "_postman_id": "47a37670-dff7-4c60-a318-38fbf39134c0",
    "name": "Payment Gateway Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ac59a76d-73e6-4dd3-b244-71395a7e94ef",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"authId\", jsonData.access_token);",
              "",
              "   tests[\"Response Body has Correct Token Type\"] = responseBody.has(\"\\\"token_type\\\":\\\"bearer\\\"\");",
              "   tests[\"Response Body has Access Token\"] = responseBody.has(\"\\\"access_token\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"authId\")+\"\\\"\");",
              "   tests[\"Response Body has Expiration Field\"] = responseBody.has(\"expires_in\");",
              "   tests[\"Response Body has Correct Scope\"] = responseBody.has(\"\\\"scope\\\":\"+\"\\\"\"+jsonData.scope+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "2dc7e010-cc77-4026-a19d-ba6c9a86ec3a",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Basic QVVUT01BVEVEX1RFU1RJTkc6dDNzdEBsbHRoM3RoMW5ncw=="
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/token?client_id=AUTOMATED_TESTING&grant_type=client_credentials",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "token"
          ],
          "query": [
            {
              "key": "client_id",
              "value": "AUTOMATED_TESTING"
            },
            {
              "key": "grant_type",
              "value": "client_credentials"
            }
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "type": "any"
                },
                {
                  "key": "password",
                  "type": "any"
                },
                {
                  "key": "saveHelperData",
                  "type": "any"
                },
                {
                  "key": "showPassword",
                  "value": false,
                  "type": "boolean"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{authorization_server}}/token?client_id=AUTOMATED_TESTING&grant_type=password",
              "host": [
                "{{authorization_server}}"
              ],
              "path": [
                "token"
              ],
              "query": [
                {
                  "key": "client_id",
                  "value": "AUTOMATED_TESTING"
                },
                {
                  "key": "grant_type",
                  "value": "password"
                }
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Processor",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "2e57cb7d-fab8-4e44-8515-87a50c27b10e",
            "exec": [
              "",
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   tests[\"Response Body has Correct Processor Id\"] = responseBody.has(\"id\");",
              "   tests[\"Response Body has Country\"] = responseBody.has(\"country\");",
              "   tests[\"Response Body has Name\"] = responseBody.has(\"name\");",
              "   tests[\"Response Body has Payment Method\"] = responseBody.has(\"paymentMethod\");",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/processors",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "processors"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{payment_gateway_server}}/processors",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "processors"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Create_Processor",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d5bae215-a624-48e8-924e-5d897536e052",
            "exec": [
              "tests[\"Response code should be 201\"] = responseCode.code === 201;",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "25a64556-b60b-4419-b7f3-06984a468e84",
            "exec": [
              "function stringGen(len) {",
              "var text = \"\";",
              "",
              "var charset = \"abcdefghijklmnopqrstuvwxyz\";",
              "",
              "for (var i = 0; i < len; i++)",
              "  text += charset.charAt(Math.floor(Math.random() * charset.length));",
              "",
              "return text;",
              "}",
              "var UniqueCountry= stringGen(3)",
              "postman.setEnvironmentVariable(\"UniqueCountry\", UniqueCountry);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          },
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "type": "text",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"name\" : \"Regions Bank\",\r\n  \"paymentMethod\" : \"EFT\",\r\n  \"country\" : \"{{UniqueCountry}}\",\r\n  \"processorFormatDetail\" : {\r\n    \"fileType\" : \"NACHA\",\r\n    \"fileFormat\" : \"abc\",\r\n    \"batchCount\" : 5,\r\n    \"fileExtention\" : \"ach\",\r\n    \"transactionCount\" : 20\r\n  }\r\n}"
        },
        "url": {
          "raw": "{{URL}}/processors",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "processors"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"companyId\": \"{{company_id}}\",\r\n  \"name\": \"DanielsTestClubABCDEFGHI\",\r\n  \"merchantDetails\": {\r\n    \"companyName\": \"Testing Company\",\r\n    \"processors\": [\r\n      \"{{processor_id}}\"\r\n    ]\r\n  },\r\n  \"businessContact\": {\r\n    \"name\": \"company\",\r\n    \"phone\": \"435685869\",\r\n    \"email\": \"testing@k.d\",\r\n    \"extention\": \"481\"\r\n  },\r\n  \"technicalContact\": {\r\n    \"name\": \"Bhavna Company\",\r\n    \"phone\": \"435975869\",\r\n    \"email\": \"testing@tc.com\",\r\n    \"extention\": \"481\"\r\n  }\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/merchant",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "merchant"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "UpdateProcessor",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "bc11e193-840d-4ea5-a24f-349c21033839",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"processor_id\", jsonData.id);",
              "   postman.setEnvironmentVariable(\"country\", jsonData.country);",
              "   postman.setEnvironmentVariable(\"paymentMethod\", jsonData.paymentMethod);",
              "",
              "   tests[\"Response Body has Correct Processor Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+jsonData.id+\"\\\"\");",
              "   tests[\"Response Body has Country\"] = responseBody.has(\"\\\"country\\\":\"+\"\\\"\"+jsonData.country+\"\\\"\");",
              "   tests[\"Response Body has Name\"] = responseBody.has(\"name\");",
              "   tests[\"Response Body has Payment Method\"] = responseBody.has(\"\\\"paymentMethod\\\":\"+\"\\\"\"+jsonData.paymentMethod+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "76522c16-caf6-49fd-bfd2-a941f7d41dd6",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "{{URL}}/processors/{{processor_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "processors",
            "{{processor_id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get_Processor_By_Id",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "42e99eb3-d9af-4955-a0f2-f67e9a972a6e",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "    ",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"processor_id\", jsonData.id);",
              "   postman.setEnvironmentVariable(\"country\", jsonData.country);",
              "   postman.setEnvironmentVariable(\"paymentMethod\", jsonData.paymentMethod);",
              "",
              "   tests[\"Response Body has Correct Processor Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+jsonData.id+\"\\\"\");",
              "   tests[\"Response Body has Country\"] = responseBody.has(\"\\\"country\\\":\"+\"\\\"\"+jsonData.country+\"\\\"\");",
              "   tests[\"Response Body has Name\"] = responseBody.has(\"name\");",
              "   tests[\"Response Body has Payment Method\"] = responseBody.has(\"\\\"paymentMethod\\\":\"+\"\\\"\"+jsonData.paymentMethod+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/processors/{{processor_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "processors",
            "{{processor_id}}"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{payment_gateway_server}}/processors",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "processors"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Company",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "49e95ee0-7e54-4d03-a660-927f94cd03ff",
            "exec": [
              "",
              "if (responseCode.code != 201)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"company_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Correct Company Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"company_id\")+\"\\\"\");",
              "   tests[\"Response Body has Company Name\"] = responseBody.has(\"\\\"name\\\":\"+\"\\\"\"+jsonData.name+\"\\\"\");",
              "   postman.setEnvironmentVariable(\"companyname\", jsonData.name);",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201;",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "ef96ef78-aaae-4756-8867-e263b40219c4",
            "exec": [
              "function stringGen(len) {",
              "var text = \"\";",
              "",
              "var charset = \"abcdefghijklmnopqrstuvwxyz\";",
              "",
              "for (var i = 0; i < len; i++)",
              "  text += charset.charAt(Math.floor(Math.random() * charset.length));",
              "",
              "return text;",
              "}",
              "var UniqueCompany= stringGen(5)",
              "postman.setEnvironmentVariable(\"UniqueCompany\", \"Company \"+UniqueCompany);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"name\" : \"{{UniqueCompany}}\"\r\n\r\n}"
        },
        "url": {
          "raw": "{{URL}}/company",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "company"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Daniels ABC Financial Services LLC\",\r\n  \"accountNumber\": 36658,\r\n  \"accountHolderName\": \"Mr Test Account Holder\",\r\n  \"routing\": \"086543217\",\r\n  \"businessContact\": {\r\n    \"name\": \"company\",\r\n    \"phone\": 435685869,\r\n    \"email\": \"testing@kd.com\",\r\n    \"extention\": \"481\"\r\n  },\r\n  \"technicalContact\": {\r\n    \"name\": \"company\",\r\n    \"phone\": 435975869,\r\n    \"email\": \"testing@tc.com\",\r\n    \"extention\": \"481\"\r\n  }\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/company",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "company"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "UpdateCompany",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "49e95ee0-7e54-4d03-a660-927f94cd03ff",
            "exec": [
              "",
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"company_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Correct Company Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"company_id\")+\"\\\"\");",
              " ",
              "   tests[\"Response Body has Company Name\"] = responseBody.has(\"\\\"name\\\":\"+\"\\\"\"+jsonData.name+\"\\\"\");",
              "   postman.setEnvironmentVariable(\"companyname\", jsonData.name);",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "ef96ef78-aaae-4756-8867-e263b40219c4",
            "exec": [
              "function stringGen(len) {",
              "var text = \"\";",
              "",
              "var charset = \"abcdefghijklmnopqrstuvwxyz\";",
              "",
              "for (var i = 0; i < len; i++)",
              "  text += charset.charAt(Math.floor(Math.random() * charset.length));",
              "",
              "return text;",
              "}",
              "var UniqueCompany= stringGen(5)",
              "postman.setEnvironmentVariable(\"UniqueCompany\", \"Company \"+UniqueCompany);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n\r\n}"
        },
        "url": {
          "raw": "{{URL}}/company/{{company_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "company",
            "{{company_id}}"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Daniels ABC Financial Services LLC\",\r\n  \"accountNumber\": 36658,\r\n  \"accountHolderName\": \"Mr Test Account Holder\",\r\n  \"routing\": \"086543217\",\r\n  \"businessContact\": {\r\n    \"name\": \"company\",\r\n    \"phone\": 435685869,\r\n    \"email\": \"testing@kd.com\",\r\n    \"extention\": \"481\"\r\n  },\r\n  \"technicalContact\": {\r\n    \"name\": \"company\",\r\n    \"phone\": 435975869,\r\n    \"email\": \"testing@tc.com\",\r\n    \"extention\": \"481\"\r\n  }\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/company",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "company"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Get Companies",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "42e99eb3-d9af-4955-a0f2-f67e9a972a6e",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   tests[\"Response Body has Company Id\"] = responseBody.has(\"id\");",
              "   tests[\"Response Body has Company Name\"] = responseBody.has(\"name\");",
              "   tests[\"Response Body has Payment Active\"] = responseBody.has(\"active\");",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/companies",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "companies"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{payment_gateway_server}}/processors",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "processors"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "CreateMerchant",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d5bae215-a624-48e8-924e-5d897536e052",
            "exec": [
              "if (responseCode.code != 201)",
              "{",
              "  tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "  tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201)",
              "{",
              "  var jsonData = JSON.parse(responseBody);",
              "  postman.setEnvironmentVariable(\"merchant_id\", jsonData.id);",
              "",
              "  tests[\"Response Body has Merchant Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"merchant_id\")+\"\\\"\");",
              "  tests[\"Response Body has companyId\"] = responseBody.has(\"\\\"companyId\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"company_id\")+\"\\\"\");",
              "",
              "",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201;",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "25a64556-b60b-4419-b7f3-06984a468e84",
            "exec": [
              "function stringGen(len) {",
              "var text = \"\";",
              "",
              "var charset = \"abcdefghijklmnopqrstuvwxyz\";",
              "",
              "for (var i = 0; i < len; i++)",
              " text += charset.charAt(Math.floor(Math.random() * charset.length));",
              "",
              "return text;",
              "}",
              "var UniqueMerchant= stringGen(5)",
              "postman.setEnvironmentVariable(\"UniqueMerchant\", \"Merchant \"+UniqueMerchant);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          },
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "type": "text",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\"companyId\": \"{{company_id}}\",\n\"name\": \"{{UniqueMerchant}}\",\n\"merchantDetails\": {\n  \"companyName\": \"Testing Company\",\n  \"processors\": [\n    \"{{processor_id}}\"\n  ]\n}\n}\n\n"
        },
        "url": {
          "raw": "{{URL}}/merchant",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "merchant"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"companyId\": \"{{company_id}}\",\r\n  \"name\": \"DanielsTestClubABCDEFGHI\",\r\n  \"merchantDetails\": {\r\n    \"companyName\": \"Testing Company\",\r\n    \"processors\": [\r\n      \"{{processor_id}}\"\r\n    ]\r\n  },\r\n  \"businessContact\": {\r\n    \"name\": \"company\",\r\n    \"phone\": \"435685869\",\r\n    \"email\": \"testing@k.d\",\r\n    \"extention\": \"481\"\r\n  },\r\n  \"technicalContact\": {\r\n    \"name\": \"Bhavna Company\",\r\n    \"phone\": \"435975869\",\r\n    \"email\": \"testing@tc.com\",\r\n    \"extention\": \"481\"\r\n  }\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/merchant",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "merchant"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Activate Merchant",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d9448e6a-c239-442d-925b-ec3128ed808c",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"merchant_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Merchant Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"merchant_id\")+\"\\\"\");",
              "",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/merchants/activate/{{merchant_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "merchants",
            "activate",
            "{{merchant_id}}"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{payment_gateway_server}}/merchants/activate/{{merchant_id}}",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "merchants",
                "activate",
                "{{merchant_id}}"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "UpdateMerchant",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "44d195ac-1df3-4a01-873c-32c3a9dc7137",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "  tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "  tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "  var jsonData = JSON.parse(responseBody);",
              "  postman.setEnvironmentVariable(\"merchant_id\", jsonData.id);",
              "",
              "  tests[\"Response Body has Merchant Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"merchant_id\")+\"\\\"\");",
              " ",
              "",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "3f030847-87b8-465f-9093-200087f171dc",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\n}"
        },
        "url": {
          "raw": "{{URL}}/merchants/{{merchant_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "merchants",
            "{{merchant_id}}"
          ]
        },
        "description": "Get Merchant By Id"
      },
      "response": []
    },
    {
      "name": "Get Merchants By Id",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d5bae215-a624-48e8-924e-5d897536e052",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   tests[\"Response Body has Company Merchant Id\"] = responseBody.has(\"id\");",
              "   tests[\"Response Body has Company company Id\"] = responseBody.has(\"companyId\");",
              "   tests[\"Response Body has Company MerchantAccountToken\"] = responseBody.has(\"merchantAccountToken\");",
              "   tests[\"Response Body has Payment Active\"] = responseBody.has(\"active\");",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/merchants/{{merchant_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "merchants",
            "{{merchant_id}}"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{payment_gateway_server}}/processors",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "processors"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Get_List_Of_Merchants",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d5bae215-a624-48e8-924e-5d897536e052",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   tests[\"Response Body has Company Merchant Id\"] = responseBody.has(\"id\");",
              "   tests[\"Response Body has Company company Id\"] = responseBody.has(\"companyId\");",
              "   tests[\"Response Body has Company MerchantAccountToken\"] = responseBody.has(\"merchantAccountToken\");",
              "   tests[\"Response Body has Payment Active\"] = responseBody.has(\"active\");",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/merchant",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "merchant"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{payment_gateway_server}}/processors",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "processors"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Payment Method Bank",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a588ba23-1ff4-4c40-a87e-fdd35804b4ac",
            "exec": [
              "if (responseCode.code != 201)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"payment_method_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Payment Method  Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"payment_method_id\")+\"\\\"\");",
              "   tests[\"Response Body has accountHolderName\"] = responseBody.has(\"\\\"accountHolderName\\\":\"+\"\\\"\"+jsonData.accountHolderName+\"\\\"\");",
              "}",
              "   ",
              "tests[\"Response code should be 200\"] = responseCode.code === 201;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"companyId\" : \"0fc96c85-5045-4ebd-bd58-6a06c23130e6\",\r\n  \"type\" : \"CHECKING_ACH\",\r\n  \"accountHolderName\" : \"Bobby Boucher\",\r\n  \"bankRouting\" : \"082000073\",\r\n  \"accountNumber\" : \"852937164973\"\r\n}"
        },
        "url": {
          "raw": "{{URL}}/payment-method",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "payment-method"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "Payment Method Card",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a588ba23-1ff4-4c40-a87e-fdd35804b4ac",
            "exec": [
              "if (responseCode.code != 201)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"payment_method_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Payment Method  Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"payment_method_id\")+\"\\\"\");",
              "   tests[\"Response Body has accountHolderName\"] = responseBody.has(\"\\\"accountHolderName\\\":\"+\"\\\"\"+jsonData.accountHolderName+\"\\\"\");",
              "}",
              "   ",
              "tests[\"Response code should be 201\"] = responseCode.code === 201;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n\"companyId\":\"{{company_id}}\",\r\n\"type\" : \"DISCOVER\",\r\n\"accountHolderName\":\"s\",\r\n\"expiration\":\"9919-01\",\r\n\"accountNumber\":\"6011894492395579\"\r\n}"
        },
        "url": {
          "raw": "{{URL}}/payment-method",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "payment-method"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "CreateCharge",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"charge_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Charge Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"charge_id\")+\"\\\"\");",
              "   tests[\"Response Body has Amount\"] = responseBody.has(\"\\\"amount\\\":\"+\"\\\"\"+jsonData.amount+\"\\\"\");",
              "  tests[\"Response Body has referenceId\"] = responseBody.has(\"\\\"referenceId\\\":\"+\"\\\"\"+jsonData.referenceId+\"\\\"\");",
              "  tests[\"Response Body has paymentMethodId\"] = responseBody.has(\"\\\"paymentMethodId\\\":\"+\"\\\"\"+jsonData.paymentMethodId+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"merchantId\": \"{{merchant_id}}\",\n    \"paymentMethodId\": \"{{payment_method_id}}\",\n    \"amount\": \"125.34 \",\n    \"source\": \"BILLING\",\n    \"referenceId\": \"{{$guid}}\",\n    \"metadata\": {\n        \"clientId\": \"{{$guid}}\",\n        \"payorId\": \"{{$guid}}\"\n    }\n}"
        },
        "url": {
          "raw": "{{URL}}/charge",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "charge"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "CreateBank",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 )",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"bank_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Bank Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"bank_id\")+\"\\\"\");",
              "",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 ;"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "338b77f7-d651-42dc-8948-d97bacddf17e",
            "exec": [
              "function stringGen(len) {",
              "var text = \"\";",
              "",
              "var charset = \"abcdefghijklmnopqrstuvwxyz\";",
              "",
              "for (var i = 0; i < len; i++)",
              " text += charset.charAt(Math.floor(Math.random() * charset.length));",
              "",
              "return text;",
              "}",
              "var UniqueBank= stringGen(5);",
              "postman.setEnvironmentVariable(\"UniqueBank\", \"Bank \"+UniqueBank);",
              "",
              "function stringNum(len) {",
              "",
              "var num = \"\";",
              "",
              "var numset = \"012345678\";",
              "",
              "for (var i = 0; i < len; i++)",
              " num += numset.charAt(Math.floor(Math.random() * numset.length));",
              "",
              "return num;",
              "}",
              "var UniqueRouting= stringNum(7);",
              "postman.setEnvironmentVariable(\"UniqueRouting\", \"08\"+UniqueRouting);",
              "",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{ \"name\" : \"{{UniqueBank}}\",\n\"routingList\": [\"{{UniqueRouting}}\"] }"
        },
        "url": {
          "raw": "{{URL}}/bank",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "bank"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "UpdateBank",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"bank_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Bank Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"bank_id\")+\"\\\"\");",
              "",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "0e59ae39-8f0b-4696-b5e1-06253ee6302a",
            "exec": [
              "function stringNum(len) {",
              "",
              "var num = \"\";",
              "",
              "var numset = \"012345678\";",
              "",
              "for (var i = 0; i < len; i++)",
              " num += numset.charAt(Math.floor(Math.random() * numset.length));",
              "",
              "return num;",
              "}",
              "var UniqueRouting= stringNum(6);",
              "postman.setEnvironmentVariable(\"UniqueRouting\", \"089\"+UniqueRouting);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{ \n\"routingList\": [\"{{UniqueRouting}}\"] }"
        },
        "url": {
          "raw": "{{URL}}/bank/{{bank_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "bank",
            "{{bank_id}}"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "GetBank",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"bank_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Bank Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"bank_id\")+\"\\\"\");",
              "",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/bank",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "bank"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "GetBankById",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"bank_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Bank Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"bank_id\")+\"\\\"\");",
              "",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/bank/{{bank_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "bank",
            "{{bank_id}}"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "DeleteBank",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"bank_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Bank Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"bank_id\")+\"\\\"\");",
              "",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/bank/{{bank_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "bank",
            "{{bank_id}}"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "GetAllFileInfo",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"charge_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Charge Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"charge_id\")+\"\\\"\");",
              "   tests[\"Response Body has Amount\"] = responseBody.has(\"\\\"amount\\\":\"+\"\\\"\"+jsonData.amount+\"\\\"\");",
              "  tests[\"Response Body has referenceId\"] = responseBody.has(\"\\\"referenceId\\\":\"+\"\\\"\"+jsonData.referenceId+\"\\\"\");",
              "  tests[\"Response Body has paymentMethodId\"] = responseBody.has(\"\\\"paymentMethodId\\\":\"+\"\\\"\"+jsonData.paymentMethodId+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/payment-file/information?page=1",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "payment-file",
            "information"
          ],
          "query": [
            {
              "key": "page",
              "value": "1"
            }
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "GetFileInfoWithProcessor",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"charge_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Charge Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"charge_id\")+\"\\\"\");",
              "   tests[\"Response Body has Amount\"] = responseBody.has(\"\\\"amount\\\":\"+\"\\\"\"+jsonData.amount+\"\\\"\");",
              "  tests[\"Response Body has referenceId\"] = responseBody.has(\"\\\"referenceId\\\":\"+\"\\\"\"+jsonData.referenceId+\"\\\"\");",
              "  tests[\"Response Body has paymentMethodId\"] = responseBody.has(\"\\\"paymentMethodId\\\":\"+\"\\\"\"+jsonData.paymentMethodId+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/payment-file/information/?page=1&processorId={{processor_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "payment-file",
            "information",
            ""
          ],
          "query": [
            {
              "key": "page",
              "value": "1"
            },
            {
              "key": "processorId",
              "value": "{{processor_id}}"
            }
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "GetFileInfoWithStatus",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"charge_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Charge Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"charge_id\")+\"\\\"\");",
              "   tests[\"Response Body has Amount\"] = responseBody.has(\"\\\"amount\\\":\"+\"\\\"\"+jsonData.amount+\"\\\"\");",
              "  tests[\"Response Body has referenceId\"] = responseBody.has(\"\\\"referenceId\\\":\"+\"\\\"\"+jsonData.referenceId+\"\\\"\");",
              "  tests[\"Response Body has paymentMethodId\"] = responseBody.has(\"\\\"paymentMethodId\\\":\"+\"\\\"\"+jsonData.paymentMethodId+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/payment-file/information/?status=VALID",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "payment-file",
            "information",
            ""
          ],
          "query": [
            {
              "key": "status",
              "value": "VALID"
            }
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "GetFileInfoWithStatus&Processor",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201 || 202)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201 || 202)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"charge_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Charge Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"charge_id\")+\"\\\"\");",
              "   tests[\"Response Body has Amount\"] = responseBody.has(\"\\\"amount\\\":\"+\"\\\"\"+jsonData.amount+\"\\\"\");",
              "  tests[\"Response Body has referenceId\"] = responseBody.has(\"\\\"referenceId\\\":\"+\"\\\"\"+jsonData.referenceId+\"\\\"\");",
              "  tests[\"Response Body has paymentMethodId\"] = responseBody.has(\"\\\"paymentMethodId\\\":\"+\"\\\"\"+jsonData.paymentMethodId+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201 || 202;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/payment-file/information/?processorId={{processor_id}}&status=VALID",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "payment-file",
            "information",
            ""
          ],
          "query": [
            {
              "key": "processorId",
              "value": "{{processor_id}}"
            },
            {
              "key": "status",
              "value": "VALID"
            }
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "CreateRefund",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 201)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 201)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              "   postman.setEnvironmentVariable(\"charge_id\", jsonData.id);",
              "",
              "   tests[\"Response Body has Charge Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"charge_id\")+\"\\\"\");",
              "   tests[\"Response Body has Amount\"] = responseBody.has(\"\\\"amount\\\":\"+\"\\\"\"+jsonData.amount+\"\\\"\");",
              "  tests[\"Response Body has referenceId\"] = responseBody.has(\"\\\"referenceId\\\":\"+\"\\\"\"+jsonData.referenceId+\"\\\"\");",
              "  tests[\"Response Body has paymentMethodId\"] = responseBody.has(\"\\\"paymentMethodId\\\":\"+\"\\\"\"+jsonData.paymentMethodId+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 201\"] = responseCode.code === 201;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"merchantId\": \"{{merchant_id}}\",\n    \"paymentMethodId\": \"{{payment_method_id}}\",\n    \"amount\": \"899.34 \",\n    \"source\": \"BILLINGRefund\",\n    \"referenceId\": \"{{$guid}}\",\n    \"metadata\": {\n        \"clientId\": \"{{$guid}}\",\n        \"payorId\": \"{{$guid}}\"\n    }\n}"
        },
        "url": {
          "raw": "{{URL}}/refund",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "refund"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "GetCharge",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "78c6efe2-67c9-4e5e-ab25-39cb5d010024",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "   tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "   tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "   var jsonData = JSON.parse(responseBody);",
              " ",
              "   tests[\"Response Body has Charge Id\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"charge_id\")+\"\\\"\");",
              "   tests[\"Response Body has Amount\"] = responseBody.has(\"\\\"amount\\\":\"+\"\\\"\"+jsonData.amount+\"\\\"\");",
              "  tests[\"Response Body has referenceId\"] = responseBody.has(\"\\\"referenceId\\\":\"+\"\\\"\"+jsonData.referenceId+\"\\\"\");",
              "  tests[\"Response Body has paymentMethodId\"] = responseBody.has(\"\\\"paymentMethodId\\\":\"+\"\\\"\"+jsonData.paymentMethodId+\"\\\"\");",
              "}",
              "",
              "tests[\"Response code should be 200\"] = responseCode.code === 200;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          },
          {
            "key": "Accept",
            "value": "*/*"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/charge/{{charge_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "charge",
            "{{charge_id}}"
          ]
        }
      },
      "response": [
        {
          "name": "Response_200",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"merchantId\": \"{{merchant_id}}\",\r\n  \"type\": \"SAVING\",\r\n  \"accountHolderName\": \"Patrick\",\r\n  \"routing\": \"172899966\",\r\n  \"number\": \"519844\",\r\n  \"acinIsactive\": \"true\"\r\n}"
            },
            "url": {
              "raw": "{{payment_gateway_server}}/accountinfotoken",
              "host": [
                "{{payment_gateway_server}}"
              ],
              "path": [
                "accountinfotoken"
              ]
            }
          },
          "code": 200,
          "_postman_previewlanguage": "Text",
          "header": [],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "DeleteMerchant",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ad368af3-73a7-48e1-9222-f4c633d6aed8",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "  tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "  tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "  var jsonData = JSON.parse(responseBody);",
              "",
              "  tests[\"Response Body has Merchant\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+jsonData.id+\"\\\"\");",
              "",
              "}",
              "",
              "tests[\"Merchant Deleted,Response code should be 200\"] = responseCode.code === 200;"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/merchants/{{merchant_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "merchants",
            "{{merchant_id}}"
          ]
        },
        "description": "Delete Merchant By Id"
      },
      "response": []
    },
    {
      "name": "DeleteCompany",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "0dcfd62b-bcaa-4f76-9bf5-d80e3b6c1105",
            "exec": [
              "if (responseCode.code != 200)",
              "{",
              "  tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
              "  tests[\"[INFO] Response Body: \" + responseBody] = true;",
              "}",
              "",
              "else if (responseCode.code === 200)",
              "{",
              "  var jsonData = JSON.parse(responseBody);",
              "",
              "  tests[\"Response Body has companyId\"] = responseBody.has(\"\\\"id\\\":\"+\"\\\"\"+jsonData.id+\"\\\"\");",
              "}",
              "",
              "tests[\"Company Deleted,Response code should be 200\"] = responseCode.code === 200;",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authId}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{URL}}/company/{{company_id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "company",
            "{{company_id}}"
          ]
        }
      },
      "response": []
    }
  ]
}