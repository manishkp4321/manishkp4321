{
	"info": {
		"_postman_id": "258ae43c-2e63-444b-9b37-24de2a18176f",
		"name": "Iteration copy copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "createUserForOrg copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06f36364-e386-4049-a75e-beb770de5076",
						"type": "text/javascript",
						"exec": [
							"",
							"",
							"var compareResponse = function(expectedObject, responseOject) {",
							"    var deepDiff = eval('(' + environment.deepDiffMapper + '()' + ')');",
							"    var dottedRes = deepDiff.diff(expectedObject, responseOject);",
							"    return dottedRes;",
							"}",
							"",
							"",
							"var nominalTestTypeCheck = function() {",
							"  ",
							"    if (pm.environment.get(\"testType\") == \"\\\"Nominal\\\"\") {",
							"     ",
							"        var resBody = JSON.parse(responseBody);",
							"        pm.environment.set(\"organizationId_new\", resBody.organizationId);",
							"        pm.environment.set(\"ownerId_new\", resBody.userId);",
							"        pm.environment.set(\"ownerEmail_new\", resBody.email);",
							"        pm.environment.set(\"ownerPassword_new\", resBody.password);",
							"    }",
							"}",
							"",
							" var testSpecificCallbacks = function() {",
							"    for(var i = 0; i < arguments.length; i++){",
							"        arguments[i].apply(); ",
							"     }",
							" }",
							"",
							"",
							" var assertCompare = eval('(' + environment.assert + ')');",
							" var testFirstNameIteration = pm.environment.get(\"testFirstNameIteration\");",
							"  if (testFirstNameIteration.length > 0) {",
							"    assertCompare();",
							"    postman.setNextRequest(\"createUserForOrg copy\");",
							"} else {",
							"    assertCompare();",
							"    pm.environment.unset(\"testFirstNameIteration\");",
							"    pm.environment.unset(\"currentNameIterationData\");",
							"    pm.environment.unset(\"currentNameIteration\");",
							"    pm.environment.unset(\"testType\");",
							"   postman.setNextRequest();",
							"",
							"}",
							"",
							"  ",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b11f195e-0e3b-4123-94dd-da9fbdbe05d8",
						"type": "text/javascript",
						"exec": [
							"var testFirstNameIteration=pm.environment.get(\"testFirstNameIteration\");",
							"var emailId=pm.environment.get(\"emailId\");",
							"",
							"var nominalUserData={",
							"  \"firstName\" : \"Michael\",",
							"  \"lastName\" : \"Test_Surname\",",
							"  \"password\" : \"Password1\",",
							"  \"phone\" : {",
							"    \"number\" : \"1234567890\",",
							"    \"extension\" : \"12345\"",
							"  },",
							"  \"birthDate\" : \"1998-01-27\",",
							"  \"email\" : \"TestUser@qa4life.com\"",
							"};",
							"",
							"var maxUserData={",
							"  \"firstName\" : \"First name of employee for maximum characters Firs\",",
							"  \"lastName\" : \"Last name of employee for maximum characters Last Last name of employee for maximum characters  Last\",",
							"  \"password\" : \"Password2\",",
							"  \"phone\" : {",
							"    \"number\" : \"123456789011123\",",
							"    \"extension\" : \"12121\"",
							"  },",
							"  \"birthDate\" : \"1998-01-27\",",
							"  \"email\" :  \"emailllll@shilpi.com\"",
							"};",
							"",
							"var minUserData={",
							"  \"firstName\" : \"T\",",
							"  \"lastName\" : \"e\",",
							"  \"password\" : \"Password3\",",
							"  \"phone\" : {",
							"    \"number\" : \"1234567888\",",
							"    \"extension\" : \"54321\"",
							"  },",
							"  \"birthDate\" : \"1998-01-27\",",
							"  \"email\" : \"T@a.com\"",
							"};",
							"",
							"var allFieldsUserData={",
							"  \"firstName\" : \"Thomas\",",
							"  \"lastName\" : \"Test_Surname\",",
							"  \"password\" : \"Password3\",",
							"   \"address\" : {",
							"    \"address1\" : \"10 Lane\",",
							"    \"address2\" : \"Little Avenue\",",
							"    \"city\" : \"Little Rock\",",
							"    \"state\" : \"Arkansas\",",
							"    \"country\" : \"United States\",",
							"    \"zipCode\" : \"70002\"",
							"  },",
							"  \"phone\" : {",
							"    \"number\" : \"1234567999\",",
							"    \"extension\" : \"32154\"",
							"  },",
							"  \"birthDate\" : \"1998-01-27\",",
							"  \"email\" : \"TestUser@abc.com\"",
							"};",
							"",
							"console.log(JSON.stringify(request));",
							"if(!testFirstNameIteration) {",
							"    ",
							"    testFirstNameIteration =  [",
							"        {data: nominalUserData,statusCode :201 , type : \"Nominal\"},",
							"        {data: maxUserData,statusCode: 201, type: \"Max\"},",
							"        {data: minUserData,statusCode :201 , type : \"Min\"},",
							"        {data: allFieldsUserData,statusCode: 201 , type: \"allFields\"}];",
							"}",
							"",
							"var currentNameIteration =testFirstNameIteration.shift();",
							"pm.environment.set(\"testFirstNameIteration\", testFirstNameIteration);",
							"pm.environment.set(\"currentNameIteration\", JSON.stringify(currentNameIteration));",
							"pm.environment.set(\"currentNameIterationData\", JSON.stringify(currentNameIteration.data));",
							"pm.environment.set(\"testType\", JSON.stringify(currentNameIteration.type));",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{currentNameIterationData}}\n"
				},
				"url": {
					"raw": "https://qa.greatestclubmanagementsoftwareever.com/registration/user",
					"protocol": "https",
					"host": [
						"qa",
						"greatestclubmanagementsoftwareever",
						"com"
					],
					"path": [
						"registration",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authorization Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "71a53e0c-c428-49c5-834e-d68ee6a788f0",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code != 200)",
							"{",
							"    tests[\"[INFO]  Request Body: \" + JSON.stringify(request)] = true;",
							"    tests[\"[INFO] Response Body: \" + responseBody] = true;",
							"}",
							"else if (responseCode.code === 200)",
							"{",
							"    var jsonData = JSON.parse(responseBody);",
							"    postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);",
							"   ",
							"    tests[\"Response Body has Correct Token Type\"] = responseBody.has(\"\\\"tokenType\\\":\\\"Bearer\\\"\");",
							"    tests[\"Response Body has Access Token\"] = responseBody.has(\"\\\"accessToken\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"accessToken\")+\"\\\"\");",
							"    tests[\"Response Body has Correct Client Id\"] = responseBody.has(\"clientId\");",
							"    tests[\"Response Body has Correct Username\"] = responseBody.has(\"\\\"username\\\":\"+\"\\\"\"+postman.getEnvironmentVariable(\"ownerEmail_new\")+\"\\\"\");",
							"    ",
							"}",
							"",
							"tests[\"Response code should be 200\"] = responseCode.code === 200;",
							"",
							"postman.setNextRequest();"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YXV0b21hdGVkLXRlc3RpbmctY2xpZW50OiNhbnRpLWpvbmFz"
					},
					{
						"key": "",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"password\": \"{{ownerPassword_new}}\",\r\n  \"username\": \"{{ownerEmail_new}}\"\r\n}"
				},
				"url": {
					"raw": "{{authentication}}/organization/{{organizationId_new}}/login?clientId=automated-testing-client",
					"host": [
						"{{authentication}}"
					],
					"path": [
						"organization",
						"{{organizationId_new}}",
						"login"
					],
					"query": [
						{
							"key": "clientId",
							"value": "automated-testing-client"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrgLocation Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f932295b-b89c-48a5-bb0d-15f2792483ef",
						"type": "text/javascript",
						"exec": [
							"var compareResponse = function(expectedObject, responseOject) {",
							"    var deepDiff = eval('(' + environment.deepDiffMapper + '()' + ')');",
							"    var dottedRes = deepDiff.diff(expectedObject, responseOject);",
							"    return dottedRes;",
							"}",
							"",
							"var nominalTestTypeCheck = function() {",
							"    if (pm.environment.get(\"testType\") == \"\\\"Nominal\\\"\") {",
							"        var resBody = JSON.parse(responseBody);",
							"      //  pm.environment.set(\"locationId_new\", resBody.location.id);",
							"       pm.environment.set(\"emailId_new\", resBody.location.email.address);",
							"    }",
							"}",
							"",
							"var testSpecificCallbacks = function() {",
							"    for(var i = 0; i < arguments.length; i++){",
							"        arguments[i].apply(); ",
							"    }",
							"}",
							"",
							"var assertCompare = eval('(' + environment.assert + ')');",
							"var testSecondNameIteration = pm.environment.get(\"testSecondNameIteration\");",
							"if (testSecondNameIteration.length > 0) {",
							"    assertCompare();",
							"} else {",
							"    assertCompare();",
							"    pm.environment.unset(\"testSecondNameIteration\");",
							"    pm.environment.unset(\"currentNameIterationData\");",
							"    pm.environment.unset(\"currentNameIteration\");",
							"    pm.environment.unset(\"testType\");",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b644532e-48b3-4ec5-9a79-597860fd4fa2",
						"type": "text/javascript",
						"exec": [
							"var orgNumber = Math.floor(Math.random() * 9000000) + 1000000;",
							"",
							"postman.setEnvironmentVariable(\"orgNumber\", orgNumber);",
							"",
							"var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
							"",
							"var randState = states[Math.floor(Math.random() * states.length)];",
							"postman.setEnvironmentVariable(\"randState\", randState);",
							"",
							"var testSecondNameIteration=pm.environment.get(\"testSecondNameIteration\");",
							"//var emailId=pm.environment.get(\"emailId\");",
							"var ownerID=pm.environment.get(\"ownerId_new\");",
							"",
							"//var phoneNumber=pm.environment.get(\"phoneNumber\");",
							"",
							"var nominalUserData={",
							"  \"name\" : \"University Sports and Fitness #6591969\",",
							"  \"ownerId\" : \"3fab4fef-31eb-4ec7-af78-21791f17cdc8\",",
							"  \"location\" : {",
							"    \"name\" : \"University Fitness Center #659196\",",
							"    \"address\" : {",
							"      \"address1\" : \"123 Fitness Lane\",",
							"      \"address2\" : \"PO Box #6591965\",",
							"      \"city\" : \"Little Rock\",",
							"      \"state\" : \"Alaska\",",
							"      \"country\" : \"United States\",",
							"      \"zipCode\" : \"33935\"",
							"    },",
							"    \"phone\" : {",
							"      \"number\" : \"1234567899\",",
							"      \"extension\" : \"411\"",
							"    },",
							"    \"email\" : {",
							"      \"address\" : \"UniversityFitness123@ufit.com\"",
							"    }",
							"  }",
							"};",
							"",
							"var maxUserData={",
							"  \"name\" : \"aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee dsfsfsdfdfsfsffasdfsdfsdffd\",",
							"  \"ownerId\" : \"3fab4fef-31eb-4ec7-af78-21791f17cdc8\",",
							"  \"location\" : {",
							"    \"name\" : \"University Fitness University Fitness Center University Fitness Center Center\",",
							"    \"address\" : {",
							"      \"address1\" : \"123 Fitness 123 Fitness Lane Lane Fitness Lane Lane\",",
							"      \"address2\" : \"PO Box 123 PO Box PO Box 123\",",
							"      \"city\" : \"Little Rock sMALL Rock Middle Rock\",",
							"      \"state\" : \"Alaska\",",
							"      \"country\" : \"United States\",",
							"      \"zipCode\" : \"339312335\"",
							"    },",
							"    \"phone\" : {",
							"      \"number\" : \"1234567892\",",
							"      \"extension\" : \"414\"",
							"    },",
							"    \"email\" : {",
							"      \"address\" : \"UniversityFitness1245@ufit.com\"",
							"    }",
							"  }",
							"};",
							"",
							"var minUserData={",
							"  \"name\" : \"U\",",
							"  \"ownerId\" : \"3fab4fef-31eb-4ec7-af78-21791f17cdc8\",",
							"  \"location\" : {",
							"    \"name\" : \"U\",",
							"    \"address\" : {",
							"      \"address1\" : \"L\",",
							"      \"address2\" : \"PO\",",
							"      \"city\" : \"Little\",",
							"      \"state\" : \"Alaska\",",
							"      \"country\" : \"United States\",",
							"      \"zipCode\" : \"3\"",
							"    },",
							"    \"phone\" : {",
							"      \"number\" : \"1234567896\",",
							"      \"extension\" : \"413\"",
							"    },",
							"    \"email\" : {",
							"      \"address\" : \"U3@ufit.com\"",
							"    }",
							"  }",
							"};",
							"",
							"var allFieldsUserData={",
							"  \"name\" : \"University Sports and Fitness 123\",",
							"  \"tin\" : \"12345\",",
							"  \"ownerId\" : \"3fab4fef-31eb-4ec7-af78-21791f17cdc8\",",
							"  \"location\" : {",
							"    \"name\" : \"University Fitness Center 4321\",",
							"    \"address\" : {",
							"      \"address1\" : \"123 456 Fitness Lane\",",
							"      \"address2\" : \"PO Box 12345\",",
							"      \"city\" : \"Little Rock\",",
							"      \"state\" : \"Florida\",",
							"      \"country\" : \"United States\",",
							"      \"zipCode\" : \"33935\"",
							"    },",
							"    \"phone\" : {",
							"      \"number\" : \"1234567890\",",
							"      \"extension\" : \"412\"",
							"      ",
							"    },",
							"    \"email\" : {",
							"      \"address\" : \"UniversityFitness13@ufit.com\"",
							"    }",
							"  },",
							"  \"email\" : {",
							"      \"address\" : \"abc@qa4life.com\"",
							"  }",
							"};",
							"",
							"console.log(JSON.stringify(request));",
							"if(!testSecondNameIteration) {",
							"    ",
							"    testSecondNameIteration =  [",
							"        {data: nominalUserData,statusCode :201 , type : \"Nominal\"},",
							"        {data: maxUserData,statusCode: 201, type: \"Max\"},",
							"        {data: minUserData,statusCode :201 , type : \"Min\"},",
							"        {data: allFieldsUserData,statusCode: 201 , type: \"allFields\"}",
							"        ];",
							"}",
							"",
							"var currentNameIteration =testSecondNameIteration.shift();",
							"pm.environment.set(\"testSecondNameIteration\", testSecondNameIteration);",
							"pm.environment.set(\"currentNameIteration\", JSON.stringify(currentNameIteration));",
							"pm.environment.set(\"currentNameIterationData\", JSON.stringify(currentNameIteration.data));",
							"pm.environment.set(\"testType\", JSON.stringify(currentNameIteration.type));",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{currentNameIteration}}"
				},
				"url": {
					"raw": "{{registration}}/{{organizationId_new}}/organization",
					"host": [
						"{{registration}}"
					],
					"path": [
						"{{organizationId_new}}",
						"organization"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9cd8682d-f1dd-4219-a029-da3a5f46044d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "eb8482b9-9918-4077-9e72-95d3795341be",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}