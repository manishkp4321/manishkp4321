{
  "variables": [],
  "info": {
    "name": "1 Automated Org->Event Population",
    "_postman_id": "e3a8c710-fafe-ade2-2348-e26b158608e2",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Create Org, Location and User",
      "description": "",
      "item": [
        {
          "name": "createUserForOrg",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var appURL = postman.getEnvironmentVariable(\"baseURL\") + jsonData.organizationId;",
                  "postman.setEnvironmentVariable(\"ownerId\", jsonData.userId);",
                  "postman.setEnvironmentVariable(\"organizationId\", jsonData.organizationId);",
                  "postman.setEnvironmentVariable(\"ownerEmail\", jsonData.email);",
                  "postman.setEnvironmentVariable(\"ownerPassword\", jsonData.password);",
                  "postman.setEnvironmentVariable(\"appURL\", appURL);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var phoneNumber = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"phoneNumber\", phoneNumber);",
                  "",
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/user",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"password\" : \"Password1\",\r\n  \"phone\" : {\r\n    \"number\" : \"{{phoneNumber}}\",\r\n    \"extension\" : \"\"\r\n  },\r\n  \"birthDate\" : \"1998-01-27\",\r\n  \"email\" : \"test{{phoneNumber}}@abc.com\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createOrgLocation",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"addressId\", jsonData.location.address.id);",
                  "postman.setEnvironmentVariable(\"locationId\", jsonData.location.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var orgNumber = Math.floor(Math.random() * 9000000) + 1000000;",
                  "",
                  "postman.setEnvironmentVariable(\"orgNumber\", orgNumber);",
                  "",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/organization",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\" : \"University Sports and Fitness #{{orgNumber}}\",\n  \"ownerId\" : \"{{ownerId}}\",\n  \"location\" : {\n    \"name\" : \"University Fitness Center #{{orgNumber}}\",\n    \"address\" : {\n      \"address1\" : \"123 Fitness Lane\",\n      \"address2\" : \"PO Box {{$randomInt}}\",\n      \"city\" : \"Little Rock\",\n      \"state\" : \"{{randState}}\",\n      \"country\" : \"United States\",\n      \"zipCode\" : \"33935\"\n    },\n    \"phone\" : {\n      \"number\" : \"{{phoneNumber}}\",\n      \"extension\" : \"411\"\n    },\n    \"email\" : {\n      \"address\" : \"UniversityFitness{{orgNumber}}@ufit.com\"\n    }\n  }\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Employee",
      "description": "",
      "item": [
        {
          "name": "createEmployee",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"employeeId\", jsonData.userId);",
                  "postman.setEnvironmentVariable(\"employeeTokenId\", jsonData.token.id);",
                  "postman.setEnvironmentVariable(\"EmpTokenExpirationTime\", jsonData.token.expirationTime);",
                  "postman.setEnvironmentVariable(\"employeeEmail\", jsonData.email);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;",
                  "",
                  "//console.out(responseBody);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\",\r\n  \"photoId\" : \"\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 4",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 5",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 6",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 7",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 8",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 9",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEmployee 10",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kevin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Golden','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{registration}}/{{organizationId}}/employee",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\" : \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gymemployee.com\",\r\n  \"firstName\" : \"{{randFirstName}}\",\r\n  \"lastName\" : \"{{randLastName}}\",\r\n  \"address\" : {\r\n    \"address1\" : \"10 Fit Lane\",\r\n    \"address2\" : \"PO Box {{$randomInt}}\",\r\n    \"city\" : \"Little Rock\",\r\n    \"state\" : \"{{randState}}\",\r\n    \"country\" : \"United States\",\r\n    \"zipCode\" : \"{{randZipCode}}\"\r\n  },\r\n  \"userType\" : \"Customer\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Waiver Document Waiver",
      "description": "",
      "item": [
        {
          "name": "uploadLocationDocument",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"waiverId\", jsonData.location.waiverDocId);",
                  "",
                  "tests[\"Response code was 200\"] = responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{my-organization}}/{{organizationId}}/{{locationId}}/document/waiver",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"accountNumber\": \"123-456\",\r\n  \"document\": \"WAIVER - The use of this website is subject to the following terms of use: \\n\\n The content of the pages of this website is for your general information and use only. It is subject to change without notice.  \\n\\nThis website uses cookies to monitor browsing preferences. If you do allow cookies to be used, the following personal information may be stored by us for use by third parties: [insert list of information].  \\n\\nNeither we nor any third parties provide any warranty or guarantee as to the accuracy, timeliness, performance, completeness or suitability of the information and materials found or offered on this website for any particular purpose. You acknowledge that such information and materials may contain inaccuracies or errors and we expressly exclude liability for any such inaccuracies or errors to the fullest extent permitted by law.  \\n\\nYour use of any information or materials on this website is entirely at your own risk, for which we shall not be liable. It shall be your own responsibility to ensure that any products, services or information available through this website meet your specific requirements.  \\n\\nThis website contains material which is owned by or licensed to us. This material includes, but is not limited to, the design, layout, look, appearance and graphics. Reproduction is prohibited other than in accordance with the copyright notice, which forms part of these terms and conditions.  \\n\\nAll trade marks reproduced in this website which are not the property of, or licensed to, the operator are acknowledged on the website.  \\n\\nUnauthorised use of this website may give rise to a claim for damages and/or be a criminal offence.  \\n\\nFrom time to time this website may also include links to other websites. These links are provided for your convenience to provide further information. They do not signify that we endorse the website(s). We have no responsibility for the content of the linked website(s).  \\n\\nYour use of this website and any dispute arising out of such use of the website is subject to the laws of England, Northern Ireland, Scotland and Wales.\",\r\n  \"locationName\": \"Sherwood\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Waiver Document TandC copy",
      "description": "",
      "item": [
        {
          "name": "uploadLocationDocumentTerms",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"termsId\", jsonData.location.waiverDocId);",
                  "",
                  "tests[\"Response code was 200\"] = responseCode.code === 200;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{my-organization}}/{{organizationId}}/{{locationId}}/document/terms",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"accountNumber\": \"123-456\",\r\n  \"document\": \"TERMS AND CONDITIONS - The use of this website is subject to the following terms of use: \\n\\n The content of the pages of this website is for your general information and use only. It is subject to change without notice.  \\n\\nThis website uses cookies to monitor browsing preferences. If you do allow cookies to be used, the following personal information may be stored by us for use by third parties: [insert list of information].  \\n\\nNeither we nor any third parties provide any warranty or guarantee as to the accuracy, timeliness, performance, completeness or suitability of the information and materials found or offered on this website for any particular purpose. You acknowledge that such information and materials may contain inaccuracies or errors and we expressly exclude liability for any such inaccuracies or errors to the fullest extent permitted by law.  \\n\\nYour use of any information or materials on this website is entirely at your own risk, for which we shall not be liable. It shall be your own responsibility to ensure that any products, services or information available through this website meet your specific requirements.  \\n\\nThis website contains material which is owned by or licensed to us. This material includes, but is not limited to, the design, layout, look, appearance and graphics. Reproduction is prohibited other than in accordance with the copyright notice, which forms part of these terms and conditions.  \\n\\nAll trade marks reproduced in this website which are not the property of, or licensed to, the operator are acknowledged on the website.  \\n\\nUnauthorised use of this website may give rise to a claim for damages and/or be a criminal offence.  \\n\\nFrom time to time this website may also include links to other websites. These links are provided for your convenience to provide further information. They do not signify that we endorse the website(s). We have no responsibility for the content of the linked website(s).  \\n\\nYour use of this website and any dispute arising out of such use of the website is subject to the laws of England, Northern Ireland, Scotland and Wales.\",\r\n  \"locationName\": \"Sherwood\"\r\n}"
            },
            "description": null
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Event Category",
      "description": "",
      "item": [
        {
          "name": "CreateEventCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventCategoryId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code should be 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"EventCategory{{$randomInt}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Random Event for 10:30AM",
      "description": "",
      "item": [
        {
          "name": "CreateLevel",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventLevelId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var levelTypes = ['Beginner', 'Intermediate', 'Moderate', 'Advanced', 'Extreme', 'Insanity'];",
                  "",
                  "var randLevel = levelTypes[Math.floor(Math.random() * levelTypes.length)];",
                  "postman.setEnvironmentVariable(\"randLevel\", randLevel);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventLevel",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randLevel}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "Create Event Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId_1030am\", jsonData.id);\r",
                  "\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var eventTypes = ['Yoga', 'Mat Pilates', 'Power Pilates', 'Zumba', 'Pound', 'Cycling', 'Swimming', 'Spin', 'P90X', 'Carve & Chizel', 'Powersculpt', 'Total Tone', 'Ab Attack'];",
                  "",
                  "var randEvent = eventTypes[Math.floor(Math.random() * eventTypes.length)];",
                  "postman.setEnvironmentVariable(\"randEvent\", randEvent);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventType",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randEvent}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateEvent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventId_1030am\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// var current_timestamp = new Date();\r",
                  "// var current_year = current_timestamp.getFullYear();\r",
                  "// var current_date = ('0' + current_timestamp.getDate()).slice(-2);\r",
                  "// var current_month = ('0' + (current_timestamp.getMonth()+1)).slice(-2);\r",
                  "\r",
                  "// var eventStartTime = current_year + \"-\" + current_month + \"-\" + current_date + \"T16:30:00\";\r",
                  "// var eventEndTime = current_year + \"-\" + current_month + \"-\" + current_date + \"T17:00:00\";\r",
                  "\r",
                  "var date = data.dateForEventCreation;\r",
                  "\r",
                  "var eventStartTime = date + \"T16:30:00\";\r",
                  "var eventEndTime = date + \"T17:00:00\";\r",
                  "\r",
                  "// postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
                  "postman.setEnvironmentVariable(\"eventStartTime\", eventStartTime);\r",
                  "postman.setEnvironmentVariable(\"eventEndTime\", eventEndTime);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventTypeId\" : \"{{eventTypeId_1030am}}\",\r\n  \"startDateTime\" : \"{{eventStartTime}}\",\r\n  \"endDateTime\" : \"{{eventEndTime}}\",\r\n  \"eventLevelId\" : \"{{eventLevelId}}\",\r\n  \"capacity\" : \"10\",\r\n  \"locationId\" : \"{{locationId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateHost",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventHostId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event/{{eventId}}/host",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventId\" : \"{{eventId}}\",\r\n  \"employeeId\" : \"{{employeeId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemCatId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemCatId_1030am\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randomLargeInt = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randomLargeInt\", randomLargeInt);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"name\" : \"{{randEvent}} {{randomLargeInt}}\",\r\n  \"type\" : \"Classes\"\r\n  \r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreatePromoCode",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventCategoryId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/promotion",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"promotionCode\" : \"SAVE10\",\r\n  \"description\" : \"New Offer\",\r\n  \"promotionAmount\" : 10,\r\n  \"promotionMaxQuantity\" : 10,\r\n  \"itemCategoryId\" : \"{{itemCatId_1030am}}\",\r\n  \"currencyId\" : \"USD\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createItem",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemId_1030am\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category/{{itemCatId}}/item",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Regular Package {{$randomInt}}\",\r\n  \"type\": \"SERVICE\",\r\n  \"unitPrice\": 45,\r\n  \"quantity\": 5,\r\n  \"metered\": true,\r\n  \"expirationStart\": \"PURCHASE\",\r\n  \"expirationTime\": 2,\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"expirationUnit\":\"WEEKS\",\r\n  \"currencyId\" : \"USD\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemEligibilityId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createPremiumItem",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category/{{itemCatId}}/item",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Premium Package {{$randomInt}}\",\r\n  \"type\": \"SERVICE\",\r\n  \"unitPrice\": 75,\r\n  \"quantity\": 5,\r\n  \"metered\": true,\r\n  \"expirationStart\": \"PURCHASE\",\r\n  \"expirationTime\": 4,\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"expirationUnit\":\"WEEKS\",\r\n  \"currencyId\" : \"USD\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId_forPremium",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemEligibilityId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create and Enroll Member for 10:30AM",
      "description": "",
      "item": [
        {
          "name": "createCard",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"cardId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var cardTypes = ['Mastercard','VISA','American Express','Discover'];",
                  "var randCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randCardType\", randCardType);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/card",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"collectedUserId\" : \"{{employeeId}}\",\r\n  \"lastFour\" : \"1234\",\r\n  \"expiryMonth\" : 2,\r\n  \"expiryYear\" : 22,\r\n  \"gateway\" : \"STRIPE\",\r\n  \"gatewayResponse\" : \"{\\\"id\\\":\\\"src_1BW8fc2eZvKYlo2C9pRNClwF\\\",\\\"object\\\":\\\"source\\\",\\\"client_secret\\\":\\\"src_client_secret_BtwYR1BVfM1hBafiBCcNaoc9\\\",\\\"created\\\":1512588904,\\\"flow\\\":\\\"none\\\",\\\"livemode\\\":false,\\\"metadata\\\":[],\\\"owner\\\":{\\\"address\\\":{\\\"postal_code\\\":\\\"72032\\\"}}}\",\r\n  \r\n  \"cardType\" : \"{{randCardType}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createUserMember",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"memberId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kelvin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Goldman','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "var randPhoneNumber = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randPhoneNumber\", randPhoneNumber);",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{manageMember}}/{{organizationId}}/{{locationId}}/member",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"person\": {\r\n  \"email\": {\r\n    \"address\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\"\r\n  },\r\n  \"firstName\": \"{{randFirstName}}\",\r\n  \"lastName\": \"{{randLastName}}\",\r\n  \"phone\": {\r\n     \"number\": \"{{phoneNumber}}\"\r\n  }\r\n },\r\n  \"waiverId\" : \"{{waiverId}}\",\r\n  \"termsAndConditionsId\" : \"{{termsId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createPurchase",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Response code was 201\"] = responseCode.code === 201;",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"invoiceId\", jsonData.items[0].invoiceId);",
                  "postman.setEnvironmentVariable(\"saleItemsId\", jsonData.items[0].id);",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randItemQuantity = Math.floor(Math.random() * 10) + 1;",
                  "var unitPrice = 22.5;",
                  "var salesTax = (unitPrice * randItemQuantity * .06).toFixed(2);",
                  "var purchaseAmount = randItemQuantity * unitPrice;",
                  "purchaseAmount = +purchaseAmount + +salesTax;",
                  "",
                  "postman.setEnvironmentVariable(\"salesTax\", salesTax);",
                  "postman.setEnvironmentVariable(\"unitPrice\", unitPrice);",
                  "postman.setEnvironmentVariable(\"purchaseAmount\", purchaseAmount);",
                  "postman.setEnvironmentVariable(\"randItemQuantity\", randItemQuantity);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/purchase/user/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"salesEmployeeId\" : \"{{employeeId}}\",\r\n  \"items\" : [ {\r\n    \"quantity\" : \"{{randItemQuantity}}\",\r\n    \"metered\" : true,\r\n    \"expirationStart\" : \"PURCHASE\",\r\n    \"expirationTime\" : 30,\r\n    \"expirationUnit\" : \"DAYS\",\r\n    \"unitPrice\" : \"{{unitPrice}}\",\r\n    \"salesTax\" : \"{{salesTax}}\",\r\n    \"itemId\" : \"{{itemId_1030am}}\",\r\n    \"itemCategoryId\" : \"{{itemCatId_1030am}}\",\r\n    \"currency\" : \"USD\",\r\n    \"itemType\" : \"SERVICE\"\r\n  } ],\r\n  \"payment\" : {\r\n    \"amount\": \"{{purchaseAmount}}\",\r\n    \"currency\": \"USD\",\r\n    \"email\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\",\r\n    \"type\": \"CASH\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_1030am}}/enrollment/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "updateEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var attendStatus = postman.getEnvironmentVariable(\"attendStatus\")",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "//Returns 409 conflict when you send attendStatus of reserved to an existing enrollment.",
                  "if(attendStatus == 'reserved'){",
                  "    tests[\"Response code should be 409\"] = responseCode.code === 409;    ",
                  "}else{",
                  "    tests[\"Response code should be 200\"] = responseCode.code === 200;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var attendStatus = ''",
                  "var attendPercent = postman.getEnvironmentVariable(\"attendPercent\"); //Approximate",
                  "//Pass \"%\" threshold from Jenkins? -TimothyW 2018-03-05",
                  "console.log(\"Attend percent:\" + attendPercent)",
                  "if(Math.random() <=  attendPercent){",
                  "    attendStatus = \"attended\"",
                  "}else{",
                  "    attendStatus = \"reserved\"",
                  "}",
                  "postman.setEnvironmentVariable(\"attendStatus\", attendStatus);"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_1030am}}/enrollment/{{userId}}?status={{attendStatus}}",
              "host": [
                "{{enrollment}}"
              ],
              "path": [
                "{{organizationId}}",
                "{{locationId}}",
                "event",
                "{{eventId_1030am}}",
                "enrollment",
                "{{userId}}"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{attendStatus}}",
                  "equals": true,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Random Event for 12PM",
      "description": "",
      "item": [
        {
          "name": "CreateLevel",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventLevelId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var levelTypes = ['Beginner', 'Intermediate', 'Moderate', 'Advanced', 'Extreme', 'Insanity'];",
                  "",
                  "var randLevel = levelTypes[Math.floor(Math.random() * levelTypes.length)];",
                  "postman.setEnvironmentVariable(\"randLevel\", randLevel);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventLevel",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randLevel}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "Create Event Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId_1200pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var eventTypes = ['Yoga', 'Mat Pilates', 'Power Pilates', 'Zumba', 'Pound', 'Cycling', 'Swimming', 'Spin', 'P90X', 'Carve & Chizel', 'Powersculpt', 'Total Tone', 'Ab Attack'];",
                  "",
                  "var randEvent = eventTypes[Math.floor(Math.random() * eventTypes.length)];",
                  "postman.setEnvironmentVariable(\"randEvent\", randEvent);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventType",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randEvent}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateEvent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventId_1200pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// var current_timestamp = new Date();\r",
                  "// var current_year = current_timestamp.getFullYear();\r",
                  "// var current_date = ('0' + current_timestamp.getDate()).slice(-2);\r",
                  "// var current_month = ('0' + (current_timestamp.getMonth()+1)).slice(-2);\r",
                  "var date = data.dateForEventCreation;\r",
                  "\r",
                  "var eventStartTime = date + \"T18:00:00\";\r",
                  "var eventEndTime = date + \"T18:30:00\";\r",
                  "\r",
                  "// postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
                  "postman.setEnvironmentVariable(\"eventStartTime\", eventStartTime);\r",
                  "postman.setEnvironmentVariable(\"eventEndTime\", eventEndTime);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventTypeId\" : \"{{eventTypeId}}\",\r\n  \"startDateTime\" : \"{{eventStartTime}}\",\r\n  \"endDateTime\" : \"{{eventEndTime}}\",\r\n  \"eventLevelId\" : \"{{eventLevelId}}\",\r\n  \"capacity\" : \"10\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateHost",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventHostId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event/{{eventId}}/host",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventId\" : \"{{eventId}}\",\r\n  \"employeeId\" : \"{{employeeId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemCatId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemCatId_1200pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randomLargeInt = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randomLargeInt\", randomLargeInt);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"name\" : \"{{randEvent}} {{randomLargeInt}}\",\r\n  \"type\" : \"Classes\"\r\n  \r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreatePromoCode",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventCategoryId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/promotion",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"promotionCode\" : \"SAVE20\",\r\n  \"description\" : \"New Offer\",\r\n  \"promotionAmount\" : 10,\r\n  \"promotionMaxQuantity\" : 10,\r\n  \"itemCategoryId\" : \"{{itemCatId_1200pm}}\",\r\n  \"currencyId\" : \"USD\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createItem",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemId_1200pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category/{{itemCatId}}/item",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Regular Package {{$randomInt}}\",\r\n  \"type\": \"SERVICE\",\r\n  \"unitPrice\": 45,\r\n  \"quantity\": 5,\r\n  \"metered\": true,\r\n  \"expirationStart\": \"PURCHASE\",\r\n  \"expirationTime\": 2,\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"expirationUnit\":\"WEEKS\",\r\n  \"currencyId\" : \"USD\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemEligibilityId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId_1030am}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create and Enroll Member for 12PM",
      "description": "",
      "item": [
        {
          "name": "createCard",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"cardId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var cardTypes = ['Paypal','Mastercard','VISA','American Express','Discover'];",
                  "var randCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randCardType\", randCardType);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/card",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"collectedUserId\" : \"{{employeeId}}\",\r\n  \"lastFour\" : \"1234\",\r\n  \"expiryMonth\" : 2,\r\n  \"expiryYear\" : 22,\r\n  \"gateway\" : \"STRIPE\",\r\n  \"gatewayResponse\" : \"{\\\"id\\\":\\\"src_1BW8fc2eZvKYlo2C9pRNClwF\\\",\\\"object\\\":\\\"source\\\",\\\"client_secret\\\":\\\"src_client_secret_BtwYR1BVfM1hBafiBCcNaoc9\\\",\\\"created\\\":1512588904,\\\"flow\\\":\\\"none\\\",\\\"livemode\\\":false,\\\"metadata\\\":[],\\\"owner\\\":{\\\"address\\\":{\\\"postal_code\\\":\\\"72032\\\"}}}\",\r\n  \r\n  \"cardType\" : \"{{randCardType}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createUserMember",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"memberId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kelvin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Goldman','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "var randPhoneNumber = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randPhoneNumber\", randPhoneNumber);",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{manageMember}}/{{organizationId}}/{{locationId}}/member",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"person\": {\r\n  \"email\": {\r\n    \"address\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\"\r\n  },\r\n  \"firstName\": \"{{randFirstName}}\",\r\n  \"lastName\": \"{{randLastName}}\",\r\n  \"phone\": {\r\n     \"number\": \"{{phoneNumber}}\"\r\n  }\r\n },\r\n  \"waiverId\" : \"{{waiverId}}\",\r\n  \"termsAndConditionsId\" : \"{{termsId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createPurchase",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"invoiceId\", jsonData.items[0].invoiceId);",
                  "postman.setEnvironmentVariable(\"saleItemsId\", jsonData.items[0].id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randItemQuantity = Math.floor(Math.random() * 10) + 1;",
                  "var unitPrice = 22.5;",
                  "var salesTax = (unitPrice * randItemQuantity * .06).toFixed(2);",
                  "var purchaseAmount = randItemQuantity * unitPrice;",
                  "purchaseAmount = +purchaseAmount + +salesTax;",
                  "",
                  "postman.setEnvironmentVariable(\"salesTax\", salesTax);",
                  "postman.setEnvironmentVariable(\"unitPrice\", unitPrice);",
                  "postman.setEnvironmentVariable(\"purchaseAmount\", purchaseAmount);",
                  "postman.setEnvironmentVariable(\"randItemQuantity\", randItemQuantity);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/purchase/user/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"salesEmployeeId\" : \"{{employeeId}}\",\r\n  \"items\" : [ {\r\n    \"quantity\" : \"{{randItemQuantity}}\",\r\n    \"metered\" : true,\r\n    \"expirationStart\" : \"PURCHASE\",\r\n    \"expirationTime\" : 30,\r\n    \"expirationUnit\" : \"DAYS\",\r\n    \"unitPrice\" : \"{{unitPrice}}\",\r\n    \"salesTax\" : \"{{salesTax}}\",\r\n    \"itemId\" : \"{{itemId_1200pm}}\",\r\n    \"itemCategoryId\" : \"{{itemCatId_1200pm}}\",\r\n    \"currency\" : \"USD\",\r\n    \"itemType\" : \"SERVICE\"\r\n  } ],\r\n  \"payment\" : {\r\n    \"amount\": \"{{purchaseAmount}}\",\r\n    \"currency\": \"USD\",\r\n    \"email\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\",\r\n    \"type\": \"CASH\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_1200pm}}/enrollment/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "updateEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var attendStatus = postman.getEnvironmentVariable(\"attendStatus\")",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "//Returns 409 conflict when you send attendStatus of reserved to an existing enrollment.",
                  "if(attendStatus == 'reserved'){",
                  "    tests[\"Response code should be 409\"] = responseCode.code === 409;    ",
                  "}else{",
                  "    tests[\"Response code should be 200\"] = responseCode.code === 200;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var attendStatus = ''",
                  "var attendPercent = postman.getEnvironmentVariable(\"attendPercent\"); //Approximate",
                  "//Pass \"%\" threshold from Jenkins? -TimothyW 2018-03-05",
                  "console.log(\"Attend percent:\" + attendPercent)",
                  "if(Math.random() <=  attendPercent){",
                  "    attendStatus = \"attended\"",
                  "}else{",
                  "    attendStatus = \"reserved\"",
                  "}",
                  "postman.setEnvironmentVariable(\"attendStatus\", attendStatus);"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_1200pm}}/enrollment/{{userId}}?status={{attendStatus}}",
              "host": [
                "{{enrollment}}"
              ],
              "path": [
                "{{organizationId}}",
                "{{locationId}}",
                "event",
                "{{eventId_1200pm}}",
                "enrollment",
                "{{userId}}"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{attendStatus}}",
                  "equals": true,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Random Event for 1PM",
      "description": "",
      "item": [
        {
          "name": "CreateLevel",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventLevelId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var levelTypes = ['Beginner', 'Intermediate', 'Moderate', 'Advanced', 'Extreme', 'Insanity'];",
                  "",
                  "var randLevel = levelTypes[Math.floor(Math.random() * levelTypes.length)];",
                  "postman.setEnvironmentVariable(\"randLevel\", randLevel);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventLevel",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randLevel}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "Create Event Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId_100pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var eventTypes = ['Yoga', 'Mat Pilates', 'Power Pilates', 'Zumba', 'Pound', 'Cycling', 'Swimming', 'Spin', 'P90X', 'Carve & Chizel', 'Powersculpt', 'Total Tone', 'Ab Attack'];",
                  "",
                  "var randEvent = eventTypes[Math.floor(Math.random() * eventTypes.length)];",
                  "postman.setEnvironmentVariable(\"randEvent\", randEvent);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventType",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randEvent}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateEvent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventId_100pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// var current_timestamp = new Date();\r",
                  "// var current_year = current_timestamp.getFullYear();\r",
                  "// var current_date = ('0' + current_timestamp.getDate()).slice(-2);\r",
                  "// var current_month = ('0' + (current_timestamp.getMonth()+1)).slice(-2);\r",
                  "var date = data.dateForEventCreation;\r",
                  "\r",
                  "var eventStartTime = date + \"T19:00:00\";\r",
                  "var eventEndTime = date + \"T19:30:00\";\r",
                  "\r",
                  "// postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
                  "postman.setEnvironmentVariable(\"eventStartTime\", eventStartTime);\r",
                  "postman.setEnvironmentVariable(\"eventEndTime\", eventEndTime);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventTypeId\" : \"{{eventTypeId}}\",\r\n  \"startDateTime\" : \"{{eventStartTime}}\",\r\n  \"endDateTime\" : \"{{eventEndTime}}\",\r\n  \"eventLevelId\" : \"{{eventLevelId}}\",\r\n  \"capacity\" : \"10\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateHost",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventHostId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event/{{eventId}}/host",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventId\" : \"{{eventId}}\",\r\n  \"employeeId\" : \"{{employeeId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemCatId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemCatId_100pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randomLargeInt = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randomLargeInt\", randomLargeInt);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"name\" : \"{{randEvent}} {{randomLargeInt}}\",\r\n  \"type\" : \"Classes\"\r\n  \r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreatePromoCode",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventCategoryId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/promotion",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"promotionCode\" : \"SAVE30\",\r\n  \"description\" : \"New Offer\",\r\n  \"promotionAmount\" : 10,\r\n  \"promotionMaxQuantity\" : 10,\r\n  \"itemCategoryId\" : \"{{itemCatId_100pm}}\",\r\n  \"currencyId\" : \"USD\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createItem",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemId_100pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category/{{itemCatId}}/item",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Regular Package {{$randomInt}}\",\r\n  \"type\": \"SERVICE\",\r\n  \"unitPrice\": 45,\r\n  \"quantity\": 5,\r\n  \"metered\": true,\r\n  \"expirationStart\": \"PURCHASE\",\r\n  \"expirationTime\": 2,\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"expirationUnit\":\"WEEKS\",\r\n  \"currencyId\" : \"USD\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemEligibilityId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create and Enroll Member for 1PM",
      "description": "",
      "item": [
        {
          "name": "createCard",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"cardId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var cardTypes = ['Paypal','Mastercard','VISA','American Express','Discover'];",
                  "var randCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randCardType\", randCardType);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/card",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"collectedUserId\" : \"{{employeeId}}\",\r\n  \"lastFour\" : \"1234\",\r\n  \"expiryMonth\" : 2,\r\n  \"expiryYear\" : 22,\r\n  \"gateway\" : \"STRIPE\",\r\n  \"gatewayResponse\" : \"{\\\"id\\\":\\\"src_1BW8fc2eZvKYlo2C9pRNClwF\\\",\\\"object\\\":\\\"source\\\",\\\"client_secret\\\":\\\"src_client_secret_BtwYR1BVfM1hBafiBCcNaoc9\\\",\\\"created\\\":1512588904,\\\"flow\\\":\\\"none\\\",\\\"livemode\\\":false,\\\"metadata\\\":[],\\\"owner\\\":{\\\"address\\\":{\\\"postal_code\\\":\\\"72032\\\"}}}\",\r\n  \r\n  \"cardType\" : \"{{randCardType}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createUserMember",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"memberId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kelvin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Goldman','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "var randPhoneNumber = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randPhoneNumber\", randPhoneNumber);",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{manageMember}}/{{organizationId}}/{{locationId}}/member",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"person\": {\r\n  \"email\": {\r\n    \"address\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\"\r\n  },\r\n  \"firstName\": \"{{randFirstName}}\",\r\n  \"lastName\": \"{{randLastName}}\",\r\n  \"phone\": {\r\n     \"number\": \"{{phoneNumber}}\"\r\n  }\r\n },\r\n  \"waiverId\" : \"{{waiverId}}\",\r\n  \"termsAndConditionsId\" : \"{{termsId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createPurchase",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"invoiceId\", jsonData.items[0].invoiceId);",
                  "postman.setEnvironmentVariable(\"saleItemsId\", jsonData.items[0].id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randItemQuantity = Math.floor(Math.random() * 10) + 1;",
                  "var unitPrice = 22.5;",
                  "var salesTax = (unitPrice * randItemQuantity * .06).toFixed(2);",
                  "var purchaseAmount = randItemQuantity * unitPrice;",
                  "purchaseAmount = +purchaseAmount + +salesTax;",
                  "",
                  "postman.setEnvironmentVariable(\"salesTax\", salesTax);",
                  "postman.setEnvironmentVariable(\"unitPrice\", unitPrice);",
                  "postman.setEnvironmentVariable(\"purchaseAmount\", purchaseAmount);",
                  "postman.setEnvironmentVariable(\"randItemQuantity\", randItemQuantity);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/purchase/user/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"salesEmployeeId\" : \"{{employeeId}}\",\r\n  \"items\" : [ {\r\n    \"quantity\" : \"{{randItemQuantity}}\",\r\n    \"metered\" : true,\r\n    \"expirationStart\" : \"PURCHASE\",\r\n    \"expirationTime\" : 30,\r\n    \"expirationUnit\" : \"DAYS\",\r\n    \"unitPrice\" : \"{{unitPrice}}\",\r\n    \"salesTax\" : \"{{salesTax}}\",\r\n    \"itemId\" : \"{{itemId_100pm}}\",\r\n    \"itemCategoryId\" : \"{{itemCatId_100pm}}\",\r\n    \"currency\" : \"USD\",\r\n    \"itemType\" : \"SERVICE\"\r\n  } ],\r\n  \"payment\" : {\r\n    \"amount\": \"{{purchaseAmount}}\",\r\n    \"currency\": \"USD\",\r\n    \"email\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\",\r\n    \"type\": \"CASH\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_100pm}}/enrollment/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "updateEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var attendStatus = postman.getEnvironmentVariable(\"attendStatus\")",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "//Returns 409 conflict when you send attendStatus of reserved to an existing enrollment.",
                  "if(attendStatus == 'reserved'){",
                  "    tests[\"Response code should be 409\"] = responseCode.code === 409;    ",
                  "}else{",
                  "    tests[\"Response code should be 200\"] = responseCode.code === 200;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var attendStatus = ''",
                  "var attendPercent = postman.getEnvironmentVariable(\"attendPercent\"); //Approximate",
                  "//Pass \"%\" threshold from Jenkins? -TimothyW 2018-03-05",
                  "console.log(\"Attend percent:\" + attendPercent)",
                  "if(Math.random() <=  attendPercent){",
                  "    attendStatus = \"attended\"",
                  "}else{",
                  "    attendStatus = \"reserved\"",
                  "}",
                  "postman.setEnvironmentVariable(\"attendStatus\", attendStatus);"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_100pm}}/enrollment/{{userId}}?status={{attendStatus}}",
              "host": [
                "{{enrollment}}"
              ],
              "path": [
                "{{organizationId}}",
                "{{locationId}}",
                "event",
                "{{eventId_100pm}}",
                "enrollment",
                "{{userId}}"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{attendStatus}}",
                  "equals": true,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Random Event for 2PM",
      "description": "",
      "item": [
        {
          "name": "CreateLevel",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventLevelId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var levelTypes = ['Beginner', 'Intermediate', 'Moderate', 'Advanced', 'Extreme', 'Insanity'];",
                  "",
                  "var randLevel = levelTypes[Math.floor(Math.random() * levelTypes.length)];",
                  "postman.setEnvironmentVariable(\"randLevel\", randLevel);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventLevel",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randLevel}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "Create Event Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId_200pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var eventTypes = ['Yoga', 'Mat Pilates', 'Power Pilates', 'Zumba', 'Pound', 'Cycling', 'Swimming', 'Spin', 'P90X', 'Carve & Chizel', 'Powersculpt', 'Total Tone', 'Ab Attack'];",
                  "",
                  "var randEvent = eventTypes[Math.floor(Math.random() * eventTypes.length)];",
                  "postman.setEnvironmentVariable(\"randEvent\", randEvent);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventType",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randEvent}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateEvent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventId_200pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// var current_timestamp = new Date();\r",
                  "// var current_year = current_timestamp.getFullYear();\r",
                  "// var current_date = ('0' + current_timestamp.getDate()).slice(-2);\r",
                  "// var current_month = ('0' + (current_timestamp.getMonth()+1)).slice(-2);\r",
                  "var date = data.dateForEventCreation;\r",
                  "\r",
                  "var eventStartTime = date + \"T20:00:00\";\r",
                  "var eventEndTime = date + \"T20:30:00\";\r",
                  "\r",
                  "// postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
                  "postman.setEnvironmentVariable(\"eventStartTime\", eventStartTime);\r",
                  "postman.setEnvironmentVariable(\"eventEndTime\", eventEndTime);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventTypeId\" : \"{{eventTypeId}}\",\r\n  \"startDateTime\" : \"{{eventStartTime}}\",\r\n  \"endDateTime\" : \"{{eventEndTime}}\",\r\n  \"eventLevelId\" : \"{{eventLevelId}}\",\r\n  \"capacity\" : \"10\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateHost",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventHostId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event/{{eventId}}/host",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventId\" : \"{{eventId}}\",\r\n  \"employeeId\" : \"{{employeeId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemCatId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemCatId_200pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randomLargeInt = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randomLargeInt\", randomLargeInt);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"name\" : \"{{randEvent}} {{randomLargeInt}}\",\r\n  \"type\" : \"Classes\"\r\n  \r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreatePromoCode",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventCategoryId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/promotion",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"promotionCode\" : \"SAVE40\",\r\n  \"description\" : \"New Offer\",\r\n  \"promotionAmount\" : 10,\r\n  \"promotionMaxQuantity\" : 10,\r\n  \"itemCategoryId\" : \"{{itemCatId_200pm}}\",\r\n  \"currencyId\" : \"USD\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createItem",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemId_200pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category/{{itemCatId}}/item",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Regular Package {{$randomInt}}\",\r\n  \"type\": \"SERVICE\",\r\n  \"unitPrice\": 45,\r\n  \"quantity\": 5,\r\n  \"metered\": true,\r\n  \"expirationStart\": \"PURCHASE\",\r\n  \"expirationTime\": 2,\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"expirationUnit\":\"WEEKS\",\r\n  \"currencyId\" : \"USD\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemEligibilityId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create and Enroll Member for 2PM",
      "description": "",
      "item": [
        {
          "name": "createCard",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"cardId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var cardTypes = ['Paypal','Mastercard','VISA','American Express','Discover'];",
                  "var randCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randCardType\", randCardType);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/card",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"collectedUserId\" : \"{{employeeId}}\",\r\n  \"lastFour\" : \"1234\",\r\n  \"expiryMonth\" : 2,\r\n  \"expiryYear\" : 22,\r\n  \"gateway\" : \"STRIPE\",\r\n  \"gatewayResponse\" : \"{\\\"id\\\":\\\"src_1BW8fc2eZvKYlo2C9pRNClwF\\\",\\\"object\\\":\\\"source\\\",\\\"client_secret\\\":\\\"src_client_secret_BtwYR1BVfM1hBafiBCcNaoc9\\\",\\\"created\\\":1512588904,\\\"flow\\\":\\\"none\\\",\\\"livemode\\\":false,\\\"metadata\\\":[],\\\"owner\\\":{\\\"address\\\":{\\\"postal_code\\\":\\\"72032\\\"}}}\",\r\n  \r\n  \"cardType\" : \"{{randCardType}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createUserMember",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"memberId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kelvin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Goldman','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "var randPhoneNumber = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randPhoneNumber\", randPhoneNumber);",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{manageMember}}/{{organizationId}}/{{locationId}}/member",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"person\": {\r\n  \"email\": {\r\n    \"address\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\"\r\n  },\r\n  \"firstName\": \"{{randFirstName}}\",\r\n  \"lastName\": \"{{randLastName}}\",\r\n  \"phone\": {\r\n     \"number\": \"{{phoneNumber}}\"\r\n  }\r\n },\r\n  \"waiverId\" : \"{{waiverId}}\",\r\n  \"termsAndConditionsId\" : \"{{termsId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createPurchase",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"invoiceId\", jsonData.items[0].invoiceId);",
                  "postman.setEnvironmentVariable(\"saleItemsId\", jsonData.items[0].id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randItemQuantity = Math.floor(Math.random() * 10) + 1;",
                  "var unitPrice = 22.5;",
                  "var salesTax = (unitPrice * randItemQuantity * .06).toFixed(2);",
                  "var purchaseAmount = randItemQuantity * unitPrice;",
                  "purchaseAmount = +purchaseAmount + +salesTax;",
                  "",
                  "postman.setEnvironmentVariable(\"salesTax\", salesTax);",
                  "postman.setEnvironmentVariable(\"unitPrice\", unitPrice);",
                  "postman.setEnvironmentVariable(\"purchaseAmount\", purchaseAmount);",
                  "postman.setEnvironmentVariable(\"randItemQuantity\", randItemQuantity);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/purchase/user/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"salesEmployeeId\" : \"{{employeeId}}\",\r\n  \"items\" : [ {\r\n    \"quantity\" : \"{{randItemQuantity}}\",\r\n    \"metered\" : true,\r\n    \"expirationStart\" : \"PURCHASE\",\r\n    \"expirationTime\" : 30,\r\n    \"expirationUnit\" : \"DAYS\",\r\n    \"unitPrice\" : \"{{unitPrice}}\",\r\n    \"salesTax\" : \"{{salesTax}}\",\r\n    \"itemId\" : \"{{itemId_200pm}}\",\r\n    \"itemCategoryId\" : \"{{itemCatId_200pm}}\",\r\n    \"currency\" : \"USD\",\r\n    \"itemType\" : \"SERVICE\"\r\n  } ],\r\n  \"payment\" : {\r\n    \"amount\": \"{{purchaseAmount}}\",\r\n    \"currency\": \"USD\",\r\n    \"email\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\",\r\n    \"type\": \"CASH\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_200pm}}/enrollment/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "updateEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var attendStatus = postman.getEnvironmentVariable(\"attendStatus\")",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "//Returns 409 conflict when you send attendStatus of reserved to an existing enrollment.",
                  "if(attendStatus == 'reserved'){",
                  "    tests[\"Response code should be 409\"] = responseCode.code === 409;    ",
                  "}else{",
                  "    tests[\"Response code should be 200\"] = responseCode.code === 200;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var attendStatus = ''",
                  "var attendPercent = postman.getEnvironmentVariable(\"attendPercent\"); //Approximate",
                  "//Pass \"%\" threshold from Jenkins? -TimothyW 2018-03-05",
                  "console.log(\"Attend percent:\" + attendPercent)",
                  "if(Math.random() <=  attendPercent){",
                  "    attendStatus = \"attended\"",
                  "}else{",
                  "    attendStatus = \"reserved\"",
                  "}",
                  "postman.setEnvironmentVariable(\"attendStatus\", attendStatus);"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_200pm}}/enrollment/{{userId}}?status={{attendStatus}}",
              "host": [
                "{{enrollment}}"
              ],
              "path": [
                "{{organizationId}}",
                "{{locationId}}",
                "event",
                "{{eventId_200pm}}",
                "enrollment",
                "{{userId}}"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{attendStatus}}",
                  "equals": true,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Random Event for 3PM",
      "description": "",
      "item": [
        {
          "name": "CreateLevel",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventLevelId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var levelTypes = ['Beginner', 'Intermediate', 'Moderate', 'Advanced', 'Extreme', 'Insanity'];",
                  "",
                  "var randLevel = levelTypes[Math.floor(Math.random() * levelTypes.length)];",
                  "postman.setEnvironmentVariable(\"randLevel\", randLevel);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventLevel",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randLevel}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "Create Event Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId_300pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var eventTypes = ['Yoga', 'Mat Pilates', 'Power Pilates', 'Zumba', 'Pound', 'Cycling', 'Swimming', 'Spin', 'P90X', 'Carve & Chizel', 'Powersculpt', 'Total Tone', 'Ab Attack'];",
                  "",
                  "var randEvent = eventTypes[Math.floor(Math.random() * eventTypes.length)];",
                  "postman.setEnvironmentVariable(\"randEvent\", randEvent);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventType",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randEvent}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateEvent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventId_300pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// var current_timestamp = new Date();\r",
                  "// var current_year = current_timestamp.getFullYear();\r",
                  "// var current_date = ('0' + current_timestamp.getDate()).slice(-2);\r",
                  "// var current_month = ('0' + (current_timestamp.getMonth()+1)).slice(-2);\r",
                  "var date = data.dateForEventCreation;\r",
                  "\r",
                  "var eventStartTime = date + \"T21:00:00\";\r",
                  "var eventEndTime = date + \"T21:30:00\";\r",
                  "\r",
                  "// postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
                  "postman.setEnvironmentVariable(\"eventStartTime\", eventStartTime);\r",
                  "postman.setEnvironmentVariable(\"eventEndTime\", eventEndTime);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventTypeId\" : \"{{eventTypeId}}\",\r\n  \"startDateTime\" : \"{{eventStartTime}}\",\r\n  \"endDateTime\" : \"{{eventEndTime}}\",\r\n  \"eventLevelId\" : \"{{eventLevelId}}\",\r\n  \"capacity\" : \"10\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateHost",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventHostId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event/{{eventId}}/host",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventId\" : \"{{eventId}}\",\r\n  \"employeeId\" : \"{{employeeId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemCatId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemCatId_300pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randomLargeInt = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randomLargeInt\", randomLargeInt);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"name\" : \"{{randEvent}} {{randomLargeInt}}\",\r\n  \"type\" : \"Classes\"\r\n  \r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreatePromoCode",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventCategoryId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/promotion",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"promotionCode\" : \"SAVE50\",\r\n  \"description\" : \"New Offer\",\r\n  \"promotionAmount\" : 10,\r\n  \"promotionMaxQuantity\" : 10,\r\n  \"itemCategoryId\" : \"{{itemCatId_300pm}}\",\r\n  \"currencyId\" : \"USD\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createItem",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemId_300pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category/{{itemCatId}}/item",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Regular Package {{$randomInt}}\",\r\n  \"type\": \"SERVICE\",\r\n  \"unitPrice\": 45,\r\n  \"quantity\": 5,\r\n  \"metered\": true,\r\n  \"expirationStart\": \"PURCHASE\",\r\n  \"expirationTime\": 2,\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"expirationUnit\":\"WEEKS\",\r\n  \"currencyId\" : \"USD\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemEligibilityId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create and Enroll Member for 3PM",
      "description": "",
      "item": [
        {
          "name": "createCard",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"cardId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var cardTypes = ['Paypal','Mastercard','VISA','American Express','Discover'];",
                  "var randCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randCardType\", randCardType);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/card",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"collectedUserId\" : \"{{employeeId}}\",\r\n  \"lastFour\" : \"1234\",\r\n  \"expiryMonth\" : 2,\r\n  \"expiryYear\" : 22,\r\n  \"gateway\" : \"STRIPE\",\r\n  \"gatewayResponse\" : \"{\\\"id\\\":\\\"src_1BW8fc2eZvKYlo2C9pRNClwF\\\",\\\"object\\\":\\\"source\\\",\\\"client_secret\\\":\\\"src_client_secret_BtwYR1BVfM1hBafiBCcNaoc9\\\",\\\"created\\\":1512588904,\\\"flow\\\":\\\"none\\\",\\\"livemode\\\":false,\\\"metadata\\\":[],\\\"owner\\\":{\\\"address\\\":{\\\"postal_code\\\":\\\"72032\\\"}}}\",\r\n  \r\n  \"cardType\" : \"{{randCardType}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createUserMember",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"memberId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kelvin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Goldman','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "var randPhoneNumber = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randPhoneNumber\", randPhoneNumber);",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{manageMember}}/{{organizationId}}/{{locationId}}/member",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"person\": {\r\n  \"email\": {\r\n    \"address\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\"\r\n  },\r\n  \"firstName\": \"{{randFirstName}}\",\r\n  \"lastName\": \"{{randLastName}}\",\r\n  \"phone\": {\r\n     \"number\": \"{{phoneNumber}}\"\r\n  }\r\n },\r\n  \"waiverId\" : \"{{waiverId}}\",\r\n  \"termsAndConditionsId\" : \"{{termsId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createPurchase",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"invoiceId\", jsonData.items[0].invoiceId);",
                  "postman.setEnvironmentVariable(\"saleItemsId\", jsonData.items[0].id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randItemQuantity = Math.floor(Math.random() * 10) + 1;",
                  "var unitPrice = 22.5;",
                  "var salesTax = (unitPrice * randItemQuantity * .06).toFixed(2);",
                  "var purchaseAmount = randItemQuantity * unitPrice;",
                  "purchaseAmount = +purchaseAmount + +salesTax;",
                  "",
                  "postman.setEnvironmentVariable(\"salesTax\", salesTax);",
                  "postman.setEnvironmentVariable(\"unitPrice\", unitPrice);",
                  "postman.setEnvironmentVariable(\"purchaseAmount\", purchaseAmount);",
                  "postman.setEnvironmentVariable(\"randItemQuantity\", randItemQuantity);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/purchase/user/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"salesEmployeeId\" : \"{{employeeId}}\",\r\n  \"items\" : [ {\r\n    \"quantity\" : \"{{randItemQuantity}}\",\r\n    \"metered\" : true,\r\n    \"expirationStart\" : \"PURCHASE\",\r\n    \"expirationTime\" : 30,\r\n    \"expirationUnit\" : \"DAYS\",\r\n    \"unitPrice\" : \"{{unitPrice}}\",\r\n    \"salesTax\" : \"{{salesTax}}\",\r\n    \"itemId\" : \"{{itemId_300pm}}\",\r\n    \"itemCategoryId\" : \"{{itemCatId_300pm}}\",\r\n    \"currency\" : \"USD\",\r\n    \"itemType\" : \"SERVICE\"\r\n  } ],\r\n  \"payment\" : {\r\n    \"amount\": \"{{purchaseAmount}}\",\r\n    \"currency\": \"USD\",\r\n    \"email\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\",\r\n    \"type\": \"CASH\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_300pm}}/enrollment/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "updateEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var attendStatus = postman.getEnvironmentVariable(\"attendStatus\")",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "//Returns 409 conflict when you send attendStatus of reserved to an existing enrollment.",
                  "if(attendStatus == 'reserved'){",
                  "    tests[\"Response code should be 409\"] = responseCode.code === 409;    ",
                  "}else{",
                  "    tests[\"Response code should be 200\"] = responseCode.code === 200;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var attendStatus = ''",
                  "var attendPercent = postman.getEnvironmentVariable(\"attendPercent\"); //Approximate",
                  "//Pass \"%\" threshold from Jenkins? -TimothyW 2018-03-05",
                  "console.log(\"Attend percent:\" + attendPercent)",
                  "if(Math.random() <=  attendPercent){",
                  "    attendStatus = \"attended\"",
                  "}else{",
                  "    attendStatus = \"reserved\"",
                  "}",
                  "postman.setEnvironmentVariable(\"attendStatus\", attendStatus);"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_300pm}}/enrollment/{{userId}}?status={{attendStatus}}",
              "host": [
                "{{enrollment}}"
              ],
              "path": [
                "{{organizationId}}",
                "{{locationId}}",
                "event",
                "{{eventId_300pm}}",
                "enrollment",
                "{{userId}}"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{attendStatus}}",
                  "equals": true,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Random Event for 4:30PM",
      "description": "",
      "item": [
        {
          "name": "CreateLevel",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventLevelId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var levelTypes = ['Beginner', 'Intermediate', 'Moderate', 'Advanced', 'Extreme', 'Insanity'];",
                  "",
                  "var randLevel = levelTypes[Math.floor(Math.random() * levelTypes.length)];",
                  "postman.setEnvironmentVariable(\"randLevel\", randLevel);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventLevel",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randLevel}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "Create Event Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId_430pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var eventTypes = ['Yoga', 'Mat Pilates', 'Power Pilates', 'Zumba', 'Pound', 'Cycling', 'Swimming', 'Spin', 'P90X', 'Carve & Chizel', 'Powersculpt', 'Total Tone', 'Ab Attack'];",
                  "",
                  "var randEvent = eventTypes[Math.floor(Math.random() * eventTypes.length)];",
                  "postman.setEnvironmentVariable(\"randEvent\", randEvent);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventType",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randEvent}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateEvent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventId_430pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// var current_timestamp = new Date();\r",
                  "// var current_year = current_timestamp.getFullYear();\r",
                  "// var current_date = ('0' + current_timestamp.getDate()).slice(-2);\r",
                  "// var current_month = ('0' + (current_timestamp.getMonth()+1)).slice(-2);\r",
                  "var date = data.dateForEventCreation;\r",
                  "\r",
                  "var eventStartTime = date + \"T22:30:00\";\r",
                  "var eventEndTime = date + \"T23:00:00\";\r",
                  "\r",
                  "// postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
                  "postman.setEnvironmentVariable(\"eventStartTime\", eventStartTime);\r",
                  "postman.setEnvironmentVariable(\"eventEndTime\", eventEndTime);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventTypeId\" : \"{{eventTypeId}}\",\r\n  \"startDateTime\" : \"{{eventStartTime}}\",\r\n  \"endDateTime\" : \"{{eventEndTime}}\",\r\n  \"eventLevelId\" : \"{{eventLevelId}}\",\r\n  \"capacity\" : \"10\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateHost",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventHostId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event/{{eventId}}/host",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventId\" : \"{{eventId}}\",\r\n  \"employeeId\" : \"{{employeeId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemCatId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemCatId_430pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randomLargeInt = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randomLargeInt\", randomLargeInt);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"name\" : \"{{randEvent}} {{randomLargeInt}}\",\r\n  \"type\" : \"Classes\"\r\n  \r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreatePromoCode",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventCategoryId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/promotion",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"promotionCode\" : \"SAVE60\",\r\n  \"description\" : \"New Offer\",\r\n  \"promotionAmount\" : 10,\r\n  \"promotionMaxQuantity\" : 10,\r\n  \"itemCategoryId\" : \"{{itemCatId_430pm}}\",\r\n  \"currencyId\" : \"USD\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createItem",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemId_430pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category/{{itemCatId}}/item",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Regular Package {{$randomInt}}\",\r\n  \"type\": \"SERVICE\",\r\n  \"unitPrice\": 45,\r\n  \"quantity\": 5,\r\n  \"metered\": true,\r\n  \"expirationStart\": \"PURCHASE\",\r\n  \"expirationTime\": 2,\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"expirationUnit\":\"WEEKS\",\r\n  \"currencyId\" : \"USD\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemEligibilityId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId_1030am}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId_3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId_1200pm}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId_4",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId_100pm}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId_5",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId_200pm}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId_6",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId_300pm}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create and Enroll Member for 4:30PM",
      "description": "",
      "item": [
        {
          "name": "createCard",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"cardId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var cardTypes = ['Paypal','Mastercard','VISA','American Express','Discover'];",
                  "var randCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randCardType\", randCardType);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/card",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"collectedUserId\" : \"{{employeeId}}\",\r\n  \"lastFour\" : \"1234\",\r\n  \"expiryMonth\" : 2,\r\n  \"expiryYear\" : 22,\r\n  \"gateway\" : \"STRIPE\",\r\n  \"gatewayResponse\" : \"{\\\"id\\\":\\\"src_1BW8fc2eZvKYlo2C9pRNClwF\\\",\\\"object\\\":\\\"source\\\",\\\"client_secret\\\":\\\"src_client_secret_BtwYR1BVfM1hBafiBCcNaoc9\\\",\\\"created\\\":1512588904,\\\"flow\\\":\\\"none\\\",\\\"livemode\\\":false,\\\"metadata\\\":[],\\\"owner\\\":{\\\"address\\\":{\\\"postal_code\\\":\\\"72032\\\"}}}\",\r\n  \r\n  \"cardType\" : \"{{randCardType}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createUserMember",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"memberId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kelvin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Goldman','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "var randPhoneNumber = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randPhoneNumber\", randPhoneNumber);",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{manageMember}}/{{organizationId}}/{{locationId}}/member",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"person\": {\r\n  \"email\": {\r\n    \"address\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\"\r\n  },\r\n  \"firstName\": \"{{randFirstName}}\",\r\n  \"lastName\": \"{{randLastName}}\",\r\n  \"phone\": {\r\n     \"number\": \"{{phoneNumber}}\"\r\n  }\r\n },\r\n  \"waiverId\" : \"{{waiverId}}\",\r\n  \"termsAndConditionsId\" : \"{{termsId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createPurchase",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"invoiceId\", jsonData.items[0].invoiceId);",
                  "postman.setEnvironmentVariable(\"saleItemsId\", jsonData.items[0].id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randItemQuantity = Math.floor(Math.random() * 10) + 1;",
                  "var unitPrice = 22.5;",
                  "var salesTax = (unitPrice * randItemQuantity * .06).toFixed(2);",
                  "var purchaseAmount = randItemQuantity * unitPrice;",
                  "purchaseAmount = +purchaseAmount + +salesTax;",
                  "",
                  "postman.setEnvironmentVariable(\"salesTax\", salesTax);",
                  "postman.setEnvironmentVariable(\"unitPrice\", unitPrice);",
                  "postman.setEnvironmentVariable(\"purchaseAmount\", purchaseAmount);",
                  "postman.setEnvironmentVariable(\"randItemQuantity\", randItemQuantity);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/purchase/user/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"salesEmployeeId\" : \"{{employeeId}}\",\r\n  \"items\" : [ {\r\n    \"quantity\" : \"{{randItemQuantity}}\",\r\n    \"metered\" : true,\r\n    \"expirationStart\" : \"PURCHASE\",\r\n    \"expirationTime\" : 30,\r\n    \"expirationUnit\" : \"DAYS\",\r\n    \"unitPrice\" : \"{{unitPrice}}\",\r\n    \"salesTax\" : \"{{salesTax}}\",\r\n    \"itemId\" : \"{{itemId_430pm}}\",\r\n    \"itemCategoryId\" : \"{{itemCatId_430pm}}\",\r\n    \"currency\" : \"USD\",\r\n    \"itemType\" : \"SERVICE\"\r\n  } ],\r\n  \"payment\" : {\r\n    \"amount\": \"{{purchaseAmount}}\",\r\n    \"currency\": \"USD\",\r\n    \"email\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\",\r\n    \"type\": \"CASH\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_430pm}}/enrollment/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "updateEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var attendStatus = postman.getEnvironmentVariable(\"attendStatus\")",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "//Returns 409 conflict when you send attendStatus of reserved to an existing enrollment.",
                  "if(attendStatus == 'reserved'){",
                  "    tests[\"Response code should be 409\"] = responseCode.code === 409;    ",
                  "}else{",
                  "    tests[\"Response code should be 200\"] = responseCode.code === 200;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var attendStatus = ''",
                  "var attendPercent = postman.getEnvironmentVariable(\"attendPercent\"); //Approximate",
                  "//Pass \"%\" threshold from Jenkins? -TimothyW 2018-03-05",
                  "console.log(\"Attend percent:\" + attendPercent)",
                  "if(Math.random() <=  attendPercent){",
                  "    attendStatus = \"attended\"",
                  "}else{",
                  "    attendStatus = \"reserved\"",
                  "}",
                  "postman.setEnvironmentVariable(\"attendStatus\", attendStatus);"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_430pm}}/enrollment/{{userId}}?status={{attendStatus}}",
              "host": [
                "{{enrollment}}"
              ],
              "path": [
                "{{organizationId}}",
                "{{locationId}}",
                "event",
                "{{eventId_430pm}}",
                "enrollment",
                "{{userId}}"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{attendStatus}}",
                  "equals": true,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create Random Event for 5PM",
      "description": "",
      "item": [
        {
          "name": "CreateLevel",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventLevelId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var levelTypes = ['Beginner', 'Intermediate', 'Moderate', 'Advanced', 'Extreme', 'Insanity'];",
                  "",
                  "var randLevel = levelTypes[Math.floor(Math.random() * levelTypes.length)];",
                  "postman.setEnvironmentVariable(\"randLevel\", randLevel);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventLevel",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randLevel}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "Create Event Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventTypeId_500pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var eventTypes = ['Yoga', 'Mat Pilates', 'Power Pilates', 'Zumba', 'Pound', 'Cycling', 'Swimming', 'Spin', 'P90X', 'Carve & Chizel', 'Powersculpt', 'Total Tone', 'Ab Attack'];",
                  "",
                  "var randEvent = eventTypes[Math.floor(Math.random() * eventTypes.length)];",
                  "postman.setEnvironmentVariable(\"randEvent\", randEvent);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/eventCategory/{{eventCategoryId}}/eventType",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randEvent}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateEvent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"eventId_500pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// var current_timestamp = new Date();\r",
                  "// var current_year = current_timestamp.getFullYear();\r",
                  "// var current_date = ('0' + current_timestamp.getDate()).slice(-2);\r",
                  "// var current_month = ('0' + (current_timestamp.getMonth()+1)).slice(-2);\r",
                  "var date = data.dateForEventCreation;\r",
                  "\r",
                  "var eventStartTime = date + \"T23:00:00\";\r",
                  "var eventEndTime = date + \"T23:30:00\";\r",
                  "\r",
                  "// postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
                  "postman.setEnvironmentVariable(\"eventStartTime\", eventStartTime);\r",
                  "postman.setEnvironmentVariable(\"eventEndTime\", eventEndTime);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventTypeId\" : \"{{eventTypeId}}\",\r\n  \"startDateTime\" : \"{{eventStartTime}}\",\r\n  \"endDateTime\" : \"{{eventEndTime}}\",\r\n  \"eventLevelId\" : \"{{eventLevelId}}\",\r\n  \"capacity\" : \"10\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreateHost",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventHostId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{schedule}}/{{organizationId}}/{{locationId}}/event/{{eventId}}/host",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"eventId\" : \"{{eventId}}\",\r\n  \"employeeId\" : \"{{employeeId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemCategory",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemCatId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemCatId_500pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randomLargeInt = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randomLargeInt\", randomLargeInt);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"name\" : \"{{randEvent}} {{randomLargeInt}}\",\r\n  \"type\" : \"Classes\"\r\n  \r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "CreatePromoCode",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"eventCategoryId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/promotion",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"promotionCode\" : \"SAVE70\",\r\n  \"description\" : \"New Offer\",\r\n  \"promotionAmount\" : 10,\r\n  \"promotionMaxQuantity\" : 10,\r\n  \"itemCategoryId\" : \"{{itemCatId_500pm}}\",\r\n  \"currencyId\" : \"USD\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createItem",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"itemId_500pm\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/inventory/category/{{itemCatId}}/item",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Regular Package {{$randomInt}}\",\r\n  \"type\": \"SERVICE\",\r\n  \"unitPrice\": 45,\r\n  \"quantity\": 5,\r\n  \"metered\": true,\r\n  \"expirationStart\": \"PURCHASE\",\r\n  \"expirationTime\": 2,\r\n  \"locationId\" : \"{{locationId}}\",\r\n  \"expirationUnit\":\"WEEKS\",\r\n  \"currencyId\" : \"USD\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"itemEligibilityId\", jsonData.id);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "itemEligibilityId_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase-setup}}/{{organizationId}}/{{locationId}}/itemEligibility",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"itemId\" : \"{{itemId}}\",\r\n  \"eventTypeId\" : \"{{eventTypeId_1200pm}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create and Enroll Member for 5PM",
      "description": "",
      "item": [
        {
          "name": "createCard",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"cardId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var cardTypes = ['Paypal','Mastercard','VISA','American Express','Discover'];",
                  "var randCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];",
                  "",
                  "postman.setEnvironmentVariable(\"randCardType\", randCardType);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/card",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"collectedUserId\" : \"{{employeeId}}\",\r\n  \"lastFour\" : \"1234\",\r\n  \"expiryMonth\" : 2,\r\n  \"expiryYear\" : 22,\r\n  \"gateway\" : \"STRIPE\",\r\n  \"gatewayResponse\" : \"{\\\"id\\\":\\\"src_1BW8fc2eZvKYlo2C9pRNClwF\\\",\\\"object\\\":\\\"source\\\",\\\"client_secret\\\":\\\"src_client_secret_BtwYR1BVfM1hBafiBCcNaoc9\\\",\\\"created\\\":1512588904,\\\"flow\\\":\\\"none\\\",\\\"livemode\\\":false,\\\"metadata\\\":[],\\\"owner\\\":{\\\"address\\\":{\\\"postal_code\\\":\\\"72032\\\"}}}\",\r\n  \r\n  \"cardType\" : \"{{randCardType}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createUserMember",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "postman.setEnvironmentVariable(\"memberId\", jsonData.id);\r",
                  "postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
                  "\r",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstNames = ['Michael', 'Alicia', 'Thomas', 'Olivia', 'Daniel', 'Candice', 'Amy', 'Barbara', 'Matthew', 'Ryan', 'Craig', 'Tammy', 'Heaven', 'Kent', 'Floretta','Sylvester','Mandi','Damion','Noel','Jacklyn','Viva','Taina','Myrtle','Ernest','Vina','Dorsey','Rico','Will','Wilber','Lacie','Oren','Eliana','Elva','Marilyn','Sharita','Nina','Tori','Rufina','Isiah','Lavenia','Coleman','Elfriede','Jannette','Zaida','Darius','Shelton','Jackson','Rochelle','Kermit','Branda','Casandra','Matt','Lorna','Angelo','China','Alena','Barrett','Aaron','Rana','Jeffrey','Zane','Shane','Melinda','Valencia','Jacque','Venessa','Don','Harold','Charol','Rebbecca','Melissa','Diego','Jorge','Katie','Gina','Gina','Lorita','Mina','Anthony','Debbie','Jason','Kassie','Misty','Misti','Dianne','Lashay','Tonia','Mariana','Peter','Zack','Kelvin','Vickie','Magda','Kris','Ralph','Maureen','Frederick','Emmaline','Marylee','Zoe','Katelyn','Birdee','Loren','Fran','Melvin','Delbert','Mittie','Clarence','Demetra','Nancy','Vaughn','Arminda','Garrett','Keith','Trudy','Theresia','Kelly'];",
                  "var lastNames = ['Savage', 'Stephens', 'Sparks', 'Stark', 'Sparks', 'Bottin', 'Jones', 'Arthurson', 'Harden', 'Gray', 'Bryson', 'Matthison', 'Wilson', 'Ivey', 'Netzley', 'Piche','Metz','Cass','Kuzma','Reno','Avis','Saville','Selvey','Stoecker','Auerbach','Eilerman','Holsey','Zepp','Davids','Foster','Sim','Messana','Schloss','Sylvester','Leathers','Niles','Combs','Phillips','Augsburger','Stroman','Beveridge','Gattis','Minnis','Fortes','Ullman','Bunkley','Spivey','Sterrett','Crist','Chow','Lierman','Ashalintubbi','Laura','Crawford','Balmer','Mcmullin','Dussault','Holbrook','Dion','Lechler','Beaton','Elzey','Sams','Irby','Hollaway','Levert','Gough','Croom','Dedman','Hatmaker','Tippetts','Odoms','Banaszak','Viveros','Hempstead','Tower','Atlas','Lozoya','Fulp','Corbo','Chapell','Monier','Selle','Parenti','Karl','Kuehn','Speers','Cambron','Blossom','Peart','Gunter','Hagenbuch','Amend','Tiernan','Ayala','Maclenn','Goldman','Colone','Golding','Landreth','Shams','Liddle','Alley','Levy','Barajas','Tetrault','Shue','Lenton','Boss','Weedman','Bergeron','Valls','Pooler','Mollett','Viger','Donnellan','Dedeaux'];",
                  "var states = ['Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];",
                  "",
                  "var randFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                  "var randLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                  "var randZipCode = Math.floor(Math.random() * 90000) + 10000;",
                  "var randState = states[Math.floor(Math.random() * states.length)];",
                  "var randPhoneNumber = Math.floor(Math.random() * 9000000000) + 1000000000;",
                  "",
                  "postman.setEnvironmentVariable(\"randPhoneNumber\", randPhoneNumber);",
                  "postman.setEnvironmentVariable(\"randFirstName\", randFirstName);",
                  "postman.setEnvironmentVariable(\"randLastName\", randLastName);",
                  "postman.setEnvironmentVariable(\"randZipCode\", randZipCode);",
                  "postman.setEnvironmentVariable(\"randState\", randState);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{manageMember}}/{{organizationId}}/{{locationId}}/member",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"person\": {\r\n  \"email\": {\r\n    \"address\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\"\r\n  },\r\n  \"firstName\": \"{{randFirstName}}\",\r\n  \"lastName\": \"{{randLastName}}\",\r\n  \"phone\": {\r\n     \"number\": \"{{phoneNumber}}\"\r\n  }\r\n },\r\n  \"waiverId\" : \"{{waiverId}}\",\r\n  \"termsAndConditionsId\" : \"{{termsId}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createPurchase",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"invoiceId\", jsonData.items[0].invoiceId);",
                  "postman.setEnvironmentVariable(\"saleItemsId\", jsonData.items[0].id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var randItemQuantity = Math.floor(Math.random() * 10) + 1;",
                  "var unitPrice = 22.5;",
                  "var salesTax = (unitPrice * randItemQuantity * .06).toFixed(2);",
                  "var purchaseAmount = randItemQuantity * unitPrice;",
                  "purchaseAmount = +purchaseAmount + +salesTax;",
                  "",
                  "postman.setEnvironmentVariable(\"salesTax\", salesTax);",
                  "postman.setEnvironmentVariable(\"unitPrice\", unitPrice);",
                  "postman.setEnvironmentVariable(\"purchaseAmount\", purchaseAmount);",
                  "postman.setEnvironmentVariable(\"randItemQuantity\", randItemQuantity);"
                ]
              }
            }
          ],
          "request": {
            "url": "{{purchase}}/{{organizationId}}/{{locationId}}/purchase/user/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"salesEmployeeId\" : \"{{employeeId}}\",\r\n  \"items\" : [ {\r\n    \"quantity\" : \"{{randItemQuantity}}\",\r\n    \"metered\" : true,\r\n    \"expirationStart\" : \"PURCHASE\",\r\n    \"expirationTime\" : 30,\r\n    \"expirationUnit\" : \"DAYS\",\r\n    \"unitPrice\" : \"{{unitPrice}}\",\r\n    \"salesTax\" : \"{{salesTax}}\",\r\n    \"itemId\" : \"{{itemId_500pm}}\",\r\n    \"itemCategoryId\" : \"{{itemCatId_500pm}}\",\r\n    \"currency\" : \"USD\",\r\n    \"itemType\" : \"SERVICE\"\r\n  } ],\r\n  \"payment\" : {\r\n    \"amount\": \"{{purchaseAmount}}\",\r\n    \"currency\": \"USD\",\r\n    \"email\": \"{{randFirstName}}.{{randLastName}}{{$randomInt}}@gmail.com\",\r\n    \"type\": \"CASH\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "createEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "tests[\"Response code was 201\"] = responseCode.code === 201;"
                ]
              }
            }
          ],
          "request": {
            "url": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_500pm}}/enrollment/{{userId}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        },
        {
          "name": "updateEnrollment",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var attendStatus = postman.getEnvironmentVariable(\"attendStatus\")",
                  "postman.setEnvironmentVariable(\"enrollmentId\", jsonData.id);",
                  "",
                  "//Returns 409 conflict when you send attendStatus of reserved to an existing enrollment.",
                  "if(attendStatus == 'reserved'){",
                  "    tests[\"Response code should be 409\"] = responseCode.code === 409;    ",
                  "}else{",
                  "    tests[\"Response code should be 200\"] = responseCode.code === 200;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var attendStatus = ''",
                  "var attendPercent = postman.getEnvironmentVariable(\"attendPercent\"); //Approximate",
                  "//Pass \"%\" threshold from Jenkins? -TimothyW 2018-03-05",
                  "console.log(\"Attend percent:\" + attendPercent)",
                  "if(Math.random() <=  attendPercent){",
                  "    attendStatus = \"attended\"",
                  "}else{",
                  "    attendStatus = \"reserved\"",
                  "}",
                  "postman.setEnvironmentVariable(\"attendStatus\", attendStatus);"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "{{enrollment}}/{{organizationId}}/{{locationId}}/event/{{eventId_500pm}}/enrollment/{{userId}}?status={{attendStatus}}",
              "host": [
                "{{enrollment}}"
              ],
              "path": [
                "{{organizationId}}",
                "{{locationId}}",
                "event",
                "{{eventId_500pm}}",
                "enrollment",
                "{{userId}}"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{attendStatus}}",
                  "equals": true,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}